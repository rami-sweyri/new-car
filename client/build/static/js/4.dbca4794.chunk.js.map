{"version":3,"sources":["components/Spinner.js","redux/actions/services.js","redux/types/file.js","redux/actions/file.js","redux/actions/user.js","redux/actions/cars.js","components/viewImage.js","redux/actions/scheduledWashes.js","components/PopOver.js","pages/scheduledWashes/Index.js"],"names":["Spinner","class","startServicesReload","dispatch","type","START_SERVICES_RELOAD","finishedServicesReload","FINISHED_SERVICES_RELOAD","readServices","readItemsAsync","url","process","successType","READ_SERVICES","errorType","SERVICE_ERROR","startReload","finishedReload","headers","localStorage","getItem","readOneService","id","readOneItemAsync","READ_ONE_SERVICE","createsService","formData","createItemAsync","CREATE_SERVICE","title","updateService","updateItemAsync","UPDATE_SERVICE","_id","deleteService","deleteItemAsync","DELETE_SERVICE","clearService","CLEAR_SERVICE","FILE_ERROR","startFileReload","finishedFileReload","readOneFile","createsFile","startUsersReload","START_USERS_RELOAD","finishedUsersReload","FINISHED_USERS_RELOAD","readAllUsers","query","READ_USERS","USER_ERROR","readUsers","queryString","encodeURIComponent","JSON","stringify","page","limit","readOneUser","READ_ONE_USER","createUser","CREATE_USER","updateUser","UPDATE_USER","deleteUser","DELETE_USER","clearUser","CLEAR_USER","startCarsReload","START_CARS_RELOAD","finishedCarsReload","FINISHED_CARS_RELOAD","readCars","READ_CARS","CAR_ERROR","ImageViewr","width","height","useDispatch","useState","fileData","setFileData","useEffect","then","res","status","data","getFileData","src","_objI","path","className","startScheduledWashesReload","START_SCHEDULED_WASHES_RELOAD","finishedScheduledWashesReload","FINISHED_SCHEDULED_WASHES_RELOAD","readScheduledWashes","READ_SCHEDULED_WASHES","SCHEDULED_WASH_ERROR","readOneScheduledWash","READ_ONE_SCHEDULED_WASH","createsScheduledWash","CREATE_SCHEDULED_WASH","updateScheduledWash","UPDATE_SCHEDULED_WASH","MyPopover","scheduledWash","serviceId","carId","open","setOpen","handleClose","onClick","size","style","zIndex","cars","map","car","services","service","notification","subTitle","body","subtitle","Services","history","days","name","number","Date","getDay","scheduledWashesReducer","useSelector","state","model","setModel","servicesReducer","citiesReducer","buildingsReducer","userReducer","carsReducer","setLimit","setPage","date","$gte","startOfDay","$lte","endOfDay","$in","setQuery","setQueryString","readCities","readBuildings","console","log","loading","Layout","Array","isArray","Object","entries","key","value","backgroundColor","selected","onChange","selectsStart","startDate","endDate","selectsEnd","minDate","newQuery","parse","includes","e","target","cities","city","label","pagination","totalCount","totalPages","current","count","Number","scheduledWashes","index","maker","color","parkingNumber","plate","find","c","building","si","s","users","user","createdBy","toLocaleDateString","d","day"],"mappings":"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","file":"static/js/4.dbca4794.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Spinner = () => {\r\n  return <div class='loader'></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import {\r\n  READ_SERVICES,\r\n  READ_ONE_SERVICE,\r\n  CREATE_SERVICE,\r\n  UPDATE_SERVICE,\r\n  DELETE_SERVICE,\r\n  SERVICE_ERROR,\r\n  CLEAR_SERVICE,\r\n  START_SERVICES_RELOAD,\r\n  FINISHED_SERVICES_RELOAD,\r\n} from '../types/services';\r\n\r\nimport { readItemsAsync } from './equCurd/readItems';\r\nimport { readOneItemAsync } from './equCurd/readOneItem';\r\nimport { createItemAsync } from './equCurd/createItem';\r\nimport { updateItemAsync } from './equCurd/updateItem';\r\nimport { deleteItemAsync } from './equCurd/deleteItem';\r\n\r\nexport const startServicesReload = () => dispatch => {\r\n  dispatch({ type: START_SERVICES_RELOAD });\r\n};\r\n\r\nexport const finishedServicesReload = () => dispatch => {\r\n  dispatch({ type: FINISHED_SERVICES_RELOAD });\r\n};\r\n\r\nexport const readServices = () =>\r\n  readItemsAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/services/all',\r\n    successType: READ_SERVICES,\r\n    errorType: SERVICE_ERROR,\r\n    startReload: startServicesReload,\r\n    finishedReload: finishedServicesReload,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const readOneService = id =>\r\n  readOneItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + `/api/services/`,\r\n    successType: READ_ONE_SERVICE,\r\n    errorType: SERVICE_ERROR,\r\n    startReload: startServicesReload,\r\n    finishedReload: finishedServicesReload,\r\n    id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const createsService = formData =>\r\n  createItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/services/',\r\n    successType: CREATE_SERVICE,\r\n    errorType: SERVICE_ERROR,\r\n    startReload: startServicesReload,\r\n    finishedReload: finishedServicesReload,\r\n    title: 'Services',\r\n    formData,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const updateService = formData =>\r\n  updateItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/services',\r\n    successType: UPDATE_SERVICE,\r\n    errorType: SERVICE_ERROR,\r\n    startReload: startServicesReload,\r\n    finishedReload: finishedServicesReload,\r\n    title: 'Services',\r\n    formData,\r\n    id: formData._id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const deleteService = id =>\r\n  deleteItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/services/',\r\n    successType: DELETE_SERVICE,\r\n    errorType: SERVICE_ERROR,\r\n    startReload: startServicesReload,\r\n    finishedReload: finishedServicesReload,\r\n    title: 'Services',\r\n    id: id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const clearService = () => dispatch => {\r\n  dispatch({ type: CLEAR_SERVICE });\r\n};\r\n","export const READ_FILES = \"READ_FILES\";\r\nexport const READ_ONE_FILE = \"READ_ONE_FILE\";\r\nexport const CREATE_FILE = \"CREATE_FILE\";\r\nexport const FILE_ERROR = \"FILE_ERROR\";\r\nexport const START_FILES_RELOAD = \"START_FILES_RELOAD\";\r\nexport const FINISHED_FILES_RELOAD = \"FINISHED_FILES_RELOAD\";\r\n","import {\r\n  READ_FILES,\r\n  READ_ONE_FILE,\r\n  CREATE_FILE,\r\n  FILE_ERROR,\r\n  START_FILES_RELOAD,\r\n  FINISHED_FILES_RELOAD,\r\n} from '../types/file';\r\n\r\nimport { readItemsAsync } from './equCurd/readItems';\r\nimport { readOneItemAsync } from './equCurd/readOneItem';\r\nimport { createItemAsync } from './equCurd/createItem';\r\nimport { updateItemAsync } from './equCurd/updateItem';\r\nimport { deleteItemAsync } from './equCurd/deleteItem';\r\n\r\nexport const startFileReload = () => dispatch => {\r\n  dispatch({ type: START_FILES_RELOAD });\r\n};\r\n\r\nexport const finishedFileReload = () => dispatch => {\r\n  dispatch({ type: FINISHED_FILES_RELOAD });\r\n};\r\n\r\nexport const readFiles = () =>\r\n  readItemsAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/file/all',\r\n    successType: READ_FILES,\r\n    errorType: FILE_ERROR,\r\n    startReload: startFileReload,\r\n    finishedReload: finishedFileReload,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const readOneFile = id =>\r\n  readOneItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + `/api/files/`,\r\n    successType: READ_ONE_FILE,\r\n    errorType: FILE_ERROR,\r\n    startReload: startFileReload,\r\n    finishedReload: finishedFileReload,\r\n    id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const createsFile = formData =>\r\n  createItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/files/',\r\n    successType: CREATE_FILE,\r\n    errorType: FILE_ERROR,\r\n    startReload: startFileReload,\r\n    finishedReload: finishedFileReload,\r\n    type: 'file',\r\n    formData,\r\n    title: 'Media File',\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n","import {\r\n  READ_USERS,\r\n  READ_ONE_USER,\r\n  CREATE_USER,\r\n  UPDATE_USER,\r\n  DELETE_USER,\r\n  USER_ERROR,\r\n  CLEAR_USER,\r\n  START_USERS_RELOAD,\r\n  FINISHED_USERS_RELOAD,\r\n} from '../types/user';\r\n\r\nimport { readItemsAsync } from './equCurd/readItems';\r\nimport { readOneItemAsync } from './equCurd/readOneItem';\r\nimport { createItemAsync } from './equCurd/createItem';\r\nimport { updateItemAsync } from './equCurd/updateItem';\r\nimport { deleteItemAsync } from './equCurd/deleteItem';\r\n\r\nexport const startUsersReload = () => dispatch => {\r\n  dispatch({ type: START_USERS_RELOAD });\r\n};\r\n\r\nexport const finishedUsersReload = () => dispatch => {\r\n  dispatch({ type: FINISHED_USERS_RELOAD });\r\n};\r\n\r\nexport const readAllUsers = query =>\r\n  readItemsAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + `/api/users/all`,\r\n    successType: READ_USERS,\r\n    errorType: USER_ERROR,\r\n    startReload: startUsersReload,\r\n    finishedReload: finishedUsersReload,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const readUsers = queryString =>\r\n  readItemsAsync({\r\n    url:\r\n      process.env.REACT_APP_BACKEND_URL +\r\n      `/api/users?query=${encodeURIComponent(\r\n        JSON.stringify(queryString.query)\r\n      )}&page=${queryString.page}&limit=${queryString.limit}`,\r\n    successType: READ_USERS,\r\n    errorType: USER_ERROR,\r\n    startReload: startUsersReload,\r\n    finishedReload: finishedUsersReload,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const readOneUser = id =>\r\n  readOneItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + `/api/users/`,\r\n    successType: READ_ONE_USER,\r\n    errorType: USER_ERROR,\r\n    startReload: startUsersReload,\r\n    finishedReload: finishedUsersReload,\r\n    id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const createUser = formData =>\r\n  createItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/users',\r\n    successType: CREATE_USER,\r\n    errorType: USER_ERROR,\r\n    startReload: startUsersReload,\r\n    finishedReload: finishedUsersReload,\r\n    title: 'User',\r\n    formData,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const updateUser = formData =>\r\n  updateItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/users/',\r\n    successType: UPDATE_USER,\r\n    errorType: USER_ERROR,\r\n    startReload: startUsersReload,\r\n    finishedReload: finishedUsersReload,\r\n    title: 'User',\r\n    formData,\r\n    id: formData._id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const deleteUser = id =>\r\n  deleteItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/users',\r\n    successType: DELETE_USER,\r\n    errorType: USER_ERROR,\r\n    startReload: startUsersReload,\r\n    finishedReload: finishedUsersReload,\r\n    title: 'User',\r\n    id: id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const clearUser = () => dispatch => {\r\n  dispatch({ type: CLEAR_USER });\r\n};\r\n","import {\r\n  READ_CARS,\r\n  READ_ONE_CAR,\r\n  CREATE_CAR,\r\n  UPDATE_CAR,\r\n  DELETE_CAR,\r\n  SEARCH_CAR_FILTER,\r\n  CAR_ERROR,\r\n  CLEAR_CAR,\r\n  START_CARS_RELOAD,\r\n  FINISHED_CARS_RELOAD,\r\n} from '../types/cars';\r\n\r\nimport { readItemsAsync } from './equCurd/readItems';\r\nimport { createItemAsync } from './equCurd/createItem';\r\nimport { updateItemAsync } from './equCurd/updateItem';\r\nimport { deleteItemAsync } from './equCurd/deleteItem';\r\nimport { readOneItemAsync } from './equCurd/readOneItem';\r\n\r\nexport const startCarsReload = () => dispatch => {\r\n  dispatch({ type: START_CARS_RELOAD });\r\n};\r\n\r\nexport const finishedCarsReload = () => dispatch => {\r\n  dispatch({ type: FINISHED_CARS_RELOAD });\r\n};\r\n\r\nexport const readCars = () =>\r\n  readItemsAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/cars/all',\r\n    successType: READ_CARS,\r\n    errorType: CAR_ERROR,\r\n    startReload: startCarsReload,\r\n    finishedReload: finishedCarsReload,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const readOneCar = id =>\r\n  readOneItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/cars/',\r\n    successType: READ_ONE_CAR,\r\n    errorType: CAR_ERROR,\r\n    startReload: startCarsReload,\r\n    finishedReload: finishedCarsReload,\r\n    id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const createCar = formData =>\r\n  createItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/cars/',\r\n\r\n    successType: CREATE_CAR,\r\n    errorType: CAR_ERROR,\r\n    startReload: startCarsReload,\r\n    finishedReload: finishedCarsReload,\r\n    formData,\r\n    title: 'Car',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const updateCar = formData =>\r\n  updateItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/cars/',\r\n    successType: UPDATE_CAR,\r\n    errorType: CAR_ERROR,\r\n    startReload: startCarsReload,\r\n    finishedReload: finishedCarsReload,\r\n    formData,\r\n    id: formData._id,\r\n    title: 'Car',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const deleteCar = id =>\r\n  deleteItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/cars/',\r\n    successType: DELETE_CAR,\r\n    errorType: CAR_ERROR,\r\n    startReload: startCarsReload,\r\n    finishedReload: finishedCarsReload,\r\n    id,\r\n    title: 'Car',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const searchCarFilter = text => dispatch => {\r\n  dispatch({\r\n    type: SEARCH_CAR_FILTER,\r\n    payload: text,\r\n  });\r\n};\r\n\r\nexport const clearCar = () => dispatch => {\r\n  dispatch({ type: CLEAR_CAR });\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createsFile, readOneFile } from '../redux/actions/file';\r\nimport _objI from '../utils/_objI';\r\nexport default function ImageViewr({ id, width, height }) {\r\n  const dispatch = useDispatch();\r\n  const [fileData, setFileData] = useState('');\r\n\r\n  const getFileData = id => {\r\n    dispatch(readOneFile(id)).then(res => {\r\n      if (res.status === 200) {\r\n        setFileData(res.data);\r\n      }\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (id) {\r\n      getFileData(id);\r\n    }\r\n  }, [id]);\r\n  return (\r\n    <img\r\n      src={_objI(fileData) ? `/${fileData.data.path}` : ''}\r\n      className={`${width ? width : `w-64`}`}\r\n    />\r\n  );\r\n}\r\n","import {\r\n  READ_SCHEDULED_WASHES,\r\n  READ_ONE_SCHEDULED_WASH,\r\n  CREATE_SCHEDULED_WASH,\r\n  UPDATE_SCHEDULED_WASH,\r\n  UPDATE_SCHEDULED_WASH_STATUS,\r\n  DELETE_SCHEDULED_WASH,\r\n  SCHEDULED_WASH_ERROR,\r\n  CLEAR_SCHEDULED_WASH,\r\n  START_SCHEDULED_WASHES_RELOAD,\r\n  FINISHED_SCHEDULED_WASHES_RELOAD,\r\n} from '../types/scheduledWashes';\r\n\r\nimport { readItemsAsync } from './equCurd/readItems';\r\nimport { readOneItemAsync } from './equCurd/readOneItem';\r\nimport { createItemAsync } from './equCurd/createItem';\r\nimport { updateItemAsync } from './equCurd/updateItem';\r\nimport { deleteItemAsync } from './equCurd/deleteItem';\r\n\r\nexport const startScheduledWashesReload = () => dispatch => {\r\n  dispatch({ type: START_SCHEDULED_WASHES_RELOAD });\r\n};\r\n\r\nexport const finishedScheduledWashesReload = () => dispatch => {\r\n  dispatch({ type: FINISHED_SCHEDULED_WASHES_RELOAD });\r\n};\r\n\r\nexport const readScheduledWashes = queryString =>\r\n  readItemsAsync({\r\n    url:\r\n      process.env.REACT_APP_BACKEND_URL +\r\n      `/api/scheduled-wash?query=${encodeURIComponent(\r\n        JSON.stringify(queryString.query)\r\n      )}&page=${queryString.page}&limit=${queryString.limit}`,\r\n    successType: READ_SCHEDULED_WASHES,\r\n    errorType: SCHEDULED_WASH_ERROR,\r\n    startReload: startScheduledWashesReload,\r\n    finishedReload: finishedScheduledWashesReload,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const readOneScheduledWash = id =>\r\n  readOneItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + `/api/scheduled-wash/`,\r\n    successType: READ_ONE_SCHEDULED_WASH,\r\n    errorType: SCHEDULED_WASH_ERROR,\r\n    startReload: startScheduledWashesReload,\r\n    finishedReload: finishedScheduledWashesReload,\r\n    id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const createsScheduledWash = formData =>\r\n  createItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/scheduled-wash/',\r\n    successType: CREATE_SCHEDULED_WASH,\r\n    errorType: SCHEDULED_WASH_ERROR,\r\n    startReload: startScheduledWashesReload,\r\n    finishedReload: finishedScheduledWashesReload,\r\n    title: 'ScheduledWashes',\r\n    formData,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const updateScheduledWash = formData =>\r\n  updateItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/scheduled-wash',\r\n    successType: UPDATE_SCHEDULED_WASH,\r\n    errorType: SCHEDULED_WASH_ERROR,\r\n    startReload: startScheduledWashesReload,\r\n    finishedReload: finishedScheduledWashesReload,\r\n    title: 'ScheduledWashes',\r\n    formData,\r\n    id: formData._id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const updateScheduledWashStatus = formData =>\r\n  updateItemAsync({\r\n    url:\r\n      process.env.REACT_APP_BACKEND_URL +\r\n      '/api/scheduled-wash/' +\r\n      formData.status,\r\n    successType: UPDATE_SCHEDULED_WASH_STATUS,\r\n    errorType: SCHEDULED_WASH_ERROR,\r\n    startReload: startScheduledWashesReload,\r\n    finishedReload: finishedScheduledWashesReload,\r\n    title: 'ScheduledWashes',\r\n    formData,\r\n    id: formData._id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const deleteScheduledWash = id =>\r\n  deleteItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/scheduled-wash/',\r\n    successType: DELETE_SCHEDULED_WASH,\r\n    errorType: SCHEDULED_WASH_ERROR,\r\n    startReload: startScheduledWashesReload,\r\n    finishedReload: finishedScheduledWashesReload,\r\n    title: 'ScheduledWashes',\r\n    id: id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const clearScheduledWash = () => dispatch => {\r\n  dispatch({ type: CLEAR_SCHEDULED_WASH });\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateScheduledWash } from '../redux/actions/scheduledWashes';\r\nimport { FiMoreHorizontal } from 'react-icons/fi';\r\nexport default function MyPopover({ scheduledWash, serviceId, carId }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(!open);\r\n  };\r\n  return (\r\n    <>\r\n      <div className='relative transition-all duration-500 cursor-pointer -right-3'>\r\n        <div\r\n          onClick={() => {\r\n            handleClose();\r\n          }}\r\n          className='z-40 flex items-center justify-center px-2 py-1 text-lg bg-black border rounded-lg shadow-md bg-opacity-80 hover:bg-opacity-95 hover:shadow-7xl'>\r\n          <FiMoreHorizontal size='1.5rem' className='text-gray-50' />\r\n        </div>\r\n        <div\r\n          style={{ zIndex: 1000 }}\r\n          className={`${\r\n            open === true ? `block` : ` hidden`\r\n          } absolute bg-gray-50 rounded-lg   select-none  w-32  -top-2 -left-36   transition-all duration-500 shadow-md hover:shadow-lg`}>\r\n          <div className='rounded-lg '>\r\n            <div className='flex items-center justify-center py-3 bg-black border-b rounded-t-lg cursor-default bg-opacity-80 text-md'>\r\n              <div className='cursor-default text-gray-50'>Change Status</div>\r\n            </div>\r\n            <div\r\n              onClick={() => {\r\n                dispatch(\r\n                  updateScheduledWash({\r\n                    _id: scheduledWash._id,\r\n                    cars: scheduledWash.cars.map(car =>\r\n                      car.carId === carId\r\n                        ? {\r\n                            ...car,\r\n                            services: car.services.map(service =>\r\n                              service.service === serviceId\r\n                                ? { ...service, status: 'rejected' }\r\n                                : { ...service }\r\n                            ),\r\n                          }\r\n                        : { ...car }\r\n                    ),\r\n\r\n                    notification: {\r\n                      title: 'title',\r\n                      subTitle: 'subTitle',\r\n                      body: 'body',\r\n                    },\r\n                  })\r\n                );\r\n                handleClose();\r\n              }}\r\n              className='flex items-center justify-center py-3 border-b rounded-b-lg hover:bg-red-200 text-md'>\r\n              <div className=''>Reject</div>\r\n            </div>\r\n            <div\r\n              onClick={() => {\r\n                dispatch(\r\n                  updateScheduledWash({\r\n                    _id: scheduledWash._id,\r\n                    cars: scheduledWash.cars.map(car =>\r\n                      car.carId === carId\r\n                        ? {\r\n                            ...car,\r\n                            services: car.services.map(service =>\r\n                              service.service === serviceId\r\n                                ? { ...service, status: 'accepted' }\r\n                                : { ...service }\r\n                            ),\r\n                          }\r\n                        : { ...car }\r\n                    ),\r\n                    notification: {\r\n                      title: 'title',\r\n                      subtitle: 'subtitle',\r\n                      body: 'body',\r\n                    },\r\n                  })\r\n                );\r\n                handleClose();\r\n              }}\r\n              className='flex items-center justify-center py-3 border-b rounded-lg hover:bg-blue-200 text-md '>\r\n              <div className=''>Accepted</div>\r\n            </div>\r\n            <div\r\n              onClick={() => {\r\n                dispatch(\r\n                  updateScheduledWash({\r\n                    _id: scheduledWash._id,\r\n                    cars: scheduledWash.cars.map(car =>\r\n                      car.carId === carId\r\n                        ? {\r\n                            ...car,\r\n                            services: car.services.map(service =>\r\n                              service.service === serviceId\r\n                                ? { ...service, status: 'progress' }\r\n                                : { ...service }\r\n                            ),\r\n                          }\r\n                        : { ...car }\r\n                    ),\r\n                    notification: {\r\n                      title: 'title',\r\n                      subtitle: 'subtitle',\r\n                      body: 'body',\r\n                    },\r\n                  })\r\n                );\r\n                handleClose();\r\n              }}\r\n              className='flex items-center justify-center py-3 border-b rounded-lg hover:bg-green-200 text-md '>\r\n              <div className=''>In-Progress</div>\r\n            </div>\r\n            <div\r\n              onClick={() => {\r\n                dispatch(\r\n                  updateScheduledWash({\r\n                    _id: scheduledWash._id,\r\n                    cars: scheduledWash.cars.map(car =>\r\n                      car.carId === carId\r\n                        ? {\r\n                            ...car,\r\n                            services: car.services.map(service =>\r\n                              service.service === serviceId\r\n                                ? { ...service, status: 'completed' }\r\n                                : { ...service }\r\n                            ),\r\n                          }\r\n                        : { ...car }\r\n                    ),\r\n                    notification: {\r\n                      title: 'title',\r\n                      subtitle: 'subtitle',\r\n                      body: 'body',\r\n                    },\r\n                  })\r\n                );\r\n                handleClose();\r\n              }}\r\n              className='flex items-center justify-center py-3 border-b rounded-lg hover:bg-indigo-200 text-md '>\r\n              <div className=''>Completed</div>\r\n            </div>\r\n            <div\r\n              onClick={() => {\r\n                dispatch(\r\n                  updateScheduledWash({\r\n                    _id: scheduledWash._id,\r\n                    cars: scheduledWash.cars.map(car =>\r\n                      car.carId === carId\r\n                        ? {\r\n                            ...car,\r\n                            services: car.services.map(service =>\r\n                              service.service === serviceId\r\n                                ? { ...service, status: 'notFound' }\r\n                                : { ...service }\r\n                            ),\r\n                          }\r\n                        : { ...car }\r\n                    ),\r\n                    notification: {\r\n                      title: 'title',\r\n                      subtitle: 'subtitle',\r\n                      body: 'body',\r\n                    },\r\n                  })\r\n                );\r\n                handleClose();\r\n              }}\r\n              className='flex items-center justify-center py-3 border-b rounded-lg hover:bg-pink-200 text- text-md '>\r\n              <div className=''>Car not found</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\nimport Layout from '../../components/Layout';\r\nimport { readScheduledWashes } from '../../redux/actions/scheduledWashes';\r\nimport { readCities } from '../../redux/actions/city';\r\nimport { readCars } from '../../redux/actions/cars';\r\nimport { readAllUsers } from '../../redux/actions/user';\r\nimport { readBuildings } from '../../redux/actions/building';\r\nimport { readServices } from '../../redux/actions/services';\r\nimport Spinner from '../../components/Spinner';\r\nimport PopOver from '../../components/PopOver';\r\nimport _objI from '../../utils/_objI';\r\nimport ImageViewer from '../../components/viewImage';\r\nimport endOfDay from 'date-fns/endOfDay';\r\nimport startOfDay from 'date-fns/startOfDay';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nexport default function Services({ history }) {\r\n  let days = [\r\n    { name: 'Sa', number: 6 },\r\n    { name: 'Su', number: 0 },\r\n    { name: 'Mo', number: 1 },\r\n    { name: 'Tu', number: 2 },\r\n    { name: 'We', number: 3 },\r\n    { name: 'Th', number: 4 },\r\n    { name: 'Fr', number: 5 },\r\n  ];\r\n  let currentDay = new Date().getDay();\r\n\r\n  const dispatch = useDispatch();\r\n  const scheduledWashesReducer = useSelector(\r\n    state => state.scheduledWashesReducer\r\n  );\r\n  const [model, setModel] = useState({});\r\n  const servicesReducer = useSelector(state => state.servicesReducer);\r\n  const citiesReducer = useSelector(state => state.citiesReducer);\r\n  const buildingsReducer = useSelector(state => state.buildingsReducer);\r\n  const userReducer = useSelector(state => state.userReducer);\r\n  const carsReducer = useSelector(state => state.carsReducer);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(50);\r\n  const [page, setPage] = useState(1);\r\n  const [startDate, setStartDate] = useState(new Date('2014/02/08'));\r\n  const [endDate, setEndDate] = useState(new Date('2014/02/10'));\r\n\r\n  const [query, setQuery] = useState({\r\n    date: {\r\n      $gte: startOfDay(new Date()),\r\n      $lte: endOfDay(new Date()),\r\n    },\r\n    'cars.services.status': { $in: 'all' },\r\n    'cars.carId.city': 'all',\r\n  });\r\n\r\n  const [queryString, setQueryString] = useState({\r\n    page: page,\r\n    limit: limit,\r\n    query: {\r\n      date: {\r\n        $gte: startOfDay(new Date()),\r\n        $lte: endOfDay(new Date()),\r\n      },\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    dispatch(readServices());\r\n    dispatch(readCities());\r\n    dispatch(readBuildings());\r\n    dispatch(readAllUsers());\r\n    dispatch(readCars());\r\n  }, []);\r\n  useEffect(() => {\r\n    // let newQuery = JSON.parse(JSON.stringify(queryString.query));\r\n    // newQuery['cars.services.status'].$in === 'all' &&\r\n    //   delete newQuery['cars.services.status'];\r\n    // newQuery['cars.carId.city'].$in === 'all' &&\r\n    //   delete newQuery['cars.carId.city'];\r\n\r\n    dispatch(readScheduledWashes({ ...queryString }));\r\n  }, [queryString]);\r\n\r\n  // const [query, setQuery] = useState({\r\n  //   service: 'all',\r\n  //   city: 'all',\r\n  //   building: 'all',\r\n  //   status: 'all',\r\n  // });\r\n  console.log({ model, query });\r\n  if (\r\n    scheduledWashesReducer.loading ||\r\n    servicesReducer.loading ||\r\n    citiesReducer.loading ||\r\n    buildingsReducer.loading ||\r\n    carsReducer.loading ||\r\n    userReducer.loading\r\n  ) {\r\n    return (\r\n      <Layout>\r\n        <div className='flex items-center justify-center h-screen'>\r\n          <Spinner />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  } else {\r\n    return (\r\n      <Layout>\r\n        {_objI(model) && (\r\n          <div\r\n            style={{ zIndex: 1001 }}\r\n            className='fixed top-0 bottom-0 left-0 right-0 flex items-center justify-center w-screen h-screen bg-black bg-opacity-60'>\r\n            <div className='relative z-50 w-6/12 p-6 border rounded shadow bg-gray-50'>\r\n              <span onClick={() => setModel({})}>\r\n                <AiOutlineCloseCircle className='absolute text-2xl text-red-600 cursor-pointer top-3 right-3 hover:text-red-700' />\r\n              </span>\r\n              <span className='flex flex-wrap w-full'>\r\n                {Array.isArray(model)\r\n                  ? JSON.stringify(model)\r\n                  : Object.entries(model).map(([key, value]) => {\r\n                      if (\r\n                        key !== 'trash' &&\r\n                        key !== 'createdAt' &&\r\n                        key !== 'updatedAt' &&\r\n                        key !== '_id' &&\r\n                        key !== 'createdBy' &&\r\n                        key !== '__v'\r\n                      ) {\r\n                        return (\r\n                          <div className='flex w-full py-1'>\r\n                            <span className='mr-3 text-sm font-semibold'>\r\n                              {key}:\r\n                            </span>\r\n                            <span>\r\n                              {typeof value === 'object' && value !== null ? (\r\n                                value.name\r\n                              ) : key === 'image' ? (\r\n                                <ImageViewer id={value} />\r\n                              ) : (\r\n                                value\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        );\r\n                      }\r\n                    })}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div\r\n          style={{ backgroundColor: '#F8F8F8' }}\r\n          className='flex flex-col items-center w-full h-screen p-10 pb-20 overflow-y-scroll transition-all'>\r\n          <div className='flex flex-wrap items-center justify-between w-full transition-all select-none'>\r\n            <div className='flex-grow my-10 text-4xl font-normal text-left text-gray-500 transition-all '>\r\n              Scheduled Washes\r\n              <div className='flex items-center w-full mt-4 text-sm text-left text-gray-500 transition-all'>\r\n                <div className='font-medium transition-all duration-100 transform cursor-pointer hover:text-gray-600 hover:scale-110'>\r\n                  Dashboard\r\n                </div>\r\n                <div className='px-3 font-medium'>{`->`}</div>\r\n                <div className='font-medium transition-all duration-100 transform cursor-pointer hover:text-gray-600 hover:scale-110'>\r\n                  Scheduled Washes\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='flex justify-start w-full'>\r\n            <div className='flex items-center p-2 px-3 text-xs text-gray-700'>\r\n              <p> Date:</p>\r\n\r\n              <DatePicker\r\n                className='w-20 p-2 py-1 ml-2 border rounded shadow'\r\n                selected={query.date.$gte}\r\n                onChange={date =>\r\n                  setQuery({\r\n                    ...query,\r\n                    date: { ...query.date, $gte: startOfDay(date) },\r\n                  })\r\n                }\r\n                selectsStart\r\n                startDate={query.date.$gte}\r\n                endDate={query.date.$lte}\r\n              />\r\n              <DatePicker\r\n                className='w-20 p-2 py-1 ml-2 border rounded shadow'\r\n                selected={query.date.$lte}\r\n                onChange={date =>\r\n                  setQuery({\r\n                    ...query,\r\n                    date: { ...query.date, $lte: endOfDay(date) },\r\n                  })\r\n                }\r\n                selectsEnd\r\n                startDate={query.date.$gte}\r\n                endDate={query.date.$lte}\r\n                minDate={query.date.$gte}\r\n              />\r\n              <div\r\n                className='p-2 py-1 ml-2 text-xs border rounded shadow cursor-pointer hover:bg-gray-100'\r\n                onClick={() => {\r\n                  let newQuery = JSON.parse(JSON.stringify(query));\r\n                  newQuery['cars.services.status'].$in === 'all' &&\r\n                    delete newQuery['cars.services.status'];\r\n                  newQuery['cars.carId.city'].includes('all') &&\r\n                    delete newQuery['cars.carId.city'];\r\n                  setQueryString({ ...queryString, query: newQuery });\r\n                }}>\r\n                Search\r\n              </div>\r\n            </div>\r\n\r\n            <div className='flex items-center p-2 px-3 text-xs text-gray-700'>\r\n              <p> City:</p>\r\n\r\n              <select\r\n                value={query['cars.carId.city']}\r\n                name='$in'\r\n                className='w-24 p-2 py-1 ml-2 border border-r-0 rounded rounded-r-none shadow'\r\n                onChange={e => {\r\n                  setQuery({\r\n                    ...query,\r\n                    'cars.carId.city': e.target.value,\r\n                  });\r\n                }}>\r\n                <option value='all'>All</option>\r\n                {citiesReducer.cities.map(city => (\r\n                  <option key={city._id} value={city._id}>\r\n                    {city.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n\r\n              <div\r\n                className='p-2 py-1 text-xs border border-l-0 rounded rounded-l-none shadow cursor-pointer hover:bg-gray-100'\r\n                onClick={() => {\r\n                  let newQuery = JSON.parse(JSON.stringify(query));\r\n                  newQuery['cars.services.status'].$in === 'all' &&\r\n                    delete newQuery['cars.services.status'];\r\n                  newQuery['cars.carId.city'].includes('all') &&\r\n                    delete newQuery['cars.carId.city'];\r\n                  setQueryString({ ...queryString, query: newQuery });\r\n                }}>\r\n                Search\r\n              </div>\r\n            </div>\r\n\r\n            <div className='flex items-center p-2 px-3 text-xs text-gray-700'>\r\n              <p> Status:</p>\r\n\r\n              <select\r\n                value={query['cars.services.status'].$in}\r\n                name='$in'\r\n                className='w-24 p-2 py-1 ml-2 border border-r-0 rounded rounded-r-none shadow'\r\n                onChange={e => {\r\n                  setQuery({\r\n                    ...query,\r\n                    'cars.services.status': {\r\n                      $in: e.target.value,\r\n                    },\r\n                  });\r\n                }}>\r\n                <option value='all'>All</option>\r\n                <option value='accepted'>Accepted</option>\r\n                <option value='pending'>Pending</option>\r\n                <option value='rejected'>Rejected</option>{' '}\r\n                <option value='completed'>Completed</option>\r\n                <option value='progress'>Progress</option>\r\n                <option value='notFound'>Not Found</option>\r\n              </select>\r\n\r\n              <div\r\n                className='p-2 py-1 text-xs border border-l-0 rounded rounded-l-none shadow cursor-pointer hover:bg-gray-100'\r\n                onClick={() => {\r\n                  let newQuery = JSON.parse(JSON.stringify(query));\r\n                  newQuery['cars.services.status'].$in === 'all' &&\r\n                    delete newQuery['cars.services.status'];\r\n                  newQuery['cars.carId.city'].$in.includes('all') &&\r\n                    delete newQuery['cars.carId.city'];\r\n                  setQueryString({ ...queryString, query: newQuery });\r\n                }}>\r\n                Search\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='flex justify-start w-full'>\r\n            <div className='flex items-center p-2 px-3 text-xs text-gray-700'>\r\n              Total Count: {scheduledWashesReducer.pagination.totalCount}\r\n            </div>\r\n            <div className='flex items-center p-2 px-3 text-xs text-gray-700'>\r\n              Total Pages: {scheduledWashesReducer.pagination.totalPages}\r\n            </div>\r\n\r\n            <div className='flex items-center p-2 px-3 text-xs text-gray-700'>\r\n              Current Page: {scheduledWashesReducer.pagination.current}\r\n            </div>\r\n            <div className='flex items-center p-2 px-3 text-xs text-gray-700'>\r\n              Count: {scheduledWashesReducer.pagination.count}\r\n            </div>\r\n            <div className='flex items-center p-2 px-3 text-xs text-gray-700'>\r\n              <p> Limit:</p>\r\n              <input\r\n                value={limit}\r\n                type='number'\r\n                name='limit'\r\n                className='w-20 p-2 py-1 ml-2 border border-r-0 rounded rounded-r-none shadow'\r\n                onChange={e => setLimit(Number(e.target.value))}\r\n              />{' '}\r\n              <div\r\n                className='p-2 py-1 text-xs border border-l-0 rounded rounded-l-none shadow cursor-pointer hover:bg-gray-100'\r\n                onClick={() =>\r\n                  setQueryString({ ...queryString, limit: limit })\r\n                }>\r\n                Submit\r\n              </div>\r\n              <div className='flex items-center p-2 px-3 text-xs text-gray-700'>\r\n                <p> Go To:</p>\r\n                <input\r\n                  value={page}\r\n                  type='number'\r\n                  name='page'\r\n                  className='w-20 p-2 py-1 ml-2 border border-r-0 rounded rounded-r-none shadow'\r\n                  onChange={e =>\r\n                    e.target.value > 0 &&\r\n                    e.target.value <=\r\n                      scheduledWashesReducer.pagination.totalPages &&\r\n                    setPage(Number(e.target.value))\r\n                  }\r\n                />{' '}\r\n                <div\r\n                  className='p-2 py-1 text-xs border border-l-0 rounded rounded-l-none shadow cursor-pointer hover:bg-gray-100'\r\n                  onClick={() =>\r\n                    setQueryString({ ...queryString, page: page })\r\n                  }>\r\n                  Submit\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <table className='w-full border-collapse shadow-lg table-auto hover:shadow-lg '>\r\n            <thead>\r\n              <tr>\r\n                <th className='hidden p-3 font-bold text-gray-600 uppercase bg-gray-200 border border-gray-300 lg:table-cell'>\r\n                  #\r\n                </th>\r\n\r\n                <th className='hidden p-3 font-bold text-gray-600 uppercase bg-gray-200 border border-gray-300 lg:table-cell'>\r\n                  Cars\r\n                </th>\r\n                <th className='hidden p-3 font-bold text-gray-600 uppercase bg-gray-200 border border-gray-300 lg:table-cell'>\r\n                  User\r\n                </th>\r\n                <th className='hidden p-3 font-bold text-gray-600 uppercase bg-gray-200 border border-gray-300 lg:table-cell'>\r\n                  Date & Time\r\n                </th>\r\n                <th className='hidden p-3 font-bold text-gray-600 uppercase bg-gray-200 border border-gray-300 lg:table-cell'>\r\n                  Day\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {scheduledWashesReducer.scheduledWashes.map(\r\n                (scheduledWash, index) => {\r\n                  return (\r\n                    <tr\r\n                      className='flex flex-row flex-wrap mb-10 bg-white lg:hover:bg-gray-100 lg:table-row lg:flex-row lg:flex-no-wrap lg:mb-0'\r\n                      key={scheduledWash._id}>\r\n                      <td className='relative block w-full p-3 text-center text-gray-700 border border-b lg:w-auto lg:table-cell lg:static '>\r\n                        <span className='absolute top-0 left-0 px-2 py-1 text-xs font-bold uppercase bg-blue-200 lg:hidden'>\r\n                          #\r\n                        </span>\r\n\r\n                        <div>{index + 1}</div>\r\n                      </td>\r\n\r\n                      <td className='relative block w-full p-3 text-center text-gray-700 border border-b lg:w-auto lg:table-cell lg:static '>\r\n                        <span className='absolute top-0 left-0 px-2 py-1 text-xs font-bold uppercase bg-blue-200 lg:hidden'>\r\n                          Cars\r\n                        </span>\r\n\r\n                        <div className='flex flex-col px-3 py-1 text-sm font-bold text-gray-500 rounded cursor-pointer'>\r\n                          {scheduledWash.cars.map(car => (\r\n                            <div className='flex flex-col items-start justify-start p-3 mb-6 border'>\r\n                              <div className='flex flex-wrap justify-between p-3 mb-3 text-sm'>\r\n                                <div className='mr-4 font-semibold text-gray-700'>\r\n                                  <span className='font-bold'>Model:</span>{' '}\r\n                                  {car.carId.model}\r\n                                </div>\r\n                                <div className='mr-4 font-semibold text-gray-700'>\r\n                                  <span className='font-bold'>Maker:</span>{' '}\r\n                                  {car.carId.maker}\r\n                                </div>\r\n                                <div className='mr-4 font-semibold text-gray-700'>\r\n                                  <span className='font-bold'>Color:</span>{' '}\r\n                                  {car.carId.color}\r\n                                </div>\r\n                                <div className='mr-4 font-semibold text-gray-700'>\r\n                                  <span className='font-bold'>\r\n                                    parkingNumber:\r\n                                  </span>{' '}\r\n                                  {car.carId.parkingNumber}\r\n                                </div>\r\n                                <div className='mr-4 font-semibold text-gray-700'>\r\n                                  <span className='font-bold'>Plate:</span>{' '}\r\n                                  {car.carId.plate}\r\n                                </div>\r\n                                <div className='mr-4 font-semibold text-gray-700'>\r\n                                  <span className='font-bold'>Building:</span>{' '}\r\n                                  {carsReducer.cars.find(\r\n                                    c => c._id === car.carId._id\r\n                                  )\r\n                                    ? carsReducer.cars.find(\r\n                                        c => c._id === car.carId._id\r\n                                      ).building.name\r\n                                    : ''}\r\n                                </div>\r\n                                <div className='mr-4 font-semibold text-gray-700'>\r\n                                  <span className='font-bold'>City:</span>{' '}\r\n                                  {carsReducer.cars.find(\r\n                                    c => c._id === car.carId._id\r\n                                  )\r\n                                    ? carsReducer.cars.find(\r\n                                        c => c._id === car.carId._id\r\n                                      ).city.name\r\n                                    : ''}\r\n                                </div>\r\n                              </div>\r\n                              {car.services.map((service, si) => (\r\n                                <div\r\n                                  className={`flex w-full items-center justify-between text-center py-2 border-b border-gray-300 bg-gray-50 ${\r\n                                    si === 0 ? 'border-t' : ''\r\n                                  }`}>\r\n                                  <div className='flex justify-start w-4/12 p-3'>\r\n                                    <span className='mr-2 font-bold text-gray-700 capitalize'>\r\n                                      service:\r\n                                    </span>{' '}\r\n                                    {servicesReducer.services.find(\r\n                                      s => s._id === service.service\r\n                                    )\r\n                                      ? servicesReducer.services.find(\r\n                                          s => s._id === service.service\r\n                                        ).name\r\n                                      : ''}\r\n                                  </div>\r\n                                  <div className='flex justify-start w-2/12 p-3'>\r\n                                    {' '}\r\n                                    <span className='mr-2 font-bold text-gray-700 capitalize'>\r\n                                      count:\r\n                                    </span>{' '}\r\n                                    {service.count}\r\n                                  </div>\r\n                                  <div className='flex justify-start w-3/12 p-3'>\r\n                                    {' '}\r\n                                    <span className='mr-2 font-bold text-gray-700 capitalize'>\r\n                                      status:\r\n                                    </span>{' '}\r\n                                    {service.status}\r\n                                  </div>\r\n                                  <span\r\n                                    className={`rounded  p-3 py-1 px-3 text-xs font-semibold text-gray-500 flex justify-end items-center w-3/12`}>\r\n                                    <PopOver\r\n                                      scheduledWash={scheduledWash}\r\n                                      serviceId={service.service}\r\n                                      carId={car.carId}\r\n                                    />\r\n                                  </span>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </td>\r\n                      <td className='relative block w-full p-3 text-center text-gray-700 border border-b lg:w-auto lg:table-cell lg:static '>\r\n                        <span className='absolute top-0 left-0 px-2 py-1 text-xs font-bold uppercase bg-blue-200 lg:hidden'>\r\n                          User\r\n                        </span>\r\n\r\n                        <div>\r\n                          {userReducer.users.map(user =>\r\n                            scheduledWash.createdBy === user._id ? (\r\n                              <p\r\n                                className='px-3 py-1 text-xs font-bold text-gray-500 rounded cursor-pointer'\r\n                                onClick={() => setModel(user)}>\r\n                                Info\r\n                              </p>\r\n                            ) : (\r\n                              ''\r\n                            )\r\n                          )}\r\n                        </div>\r\n                      </td>\r\n                      <td className='relative block w-full p-3 text-center text-gray-700 border border-b lg:w-auto lg:table-cell lg:static'>\r\n                        <span className='absolute top-0 left-0 px-2 py-1 text-xs font-bold uppercase bg-blue-200 lg:hidden'>\r\n                          Date & Time\r\n                        </span>\r\n                        <span\r\n                          className={`rounded py-1 px-3 text-xs font-semibold text-gray-500`}>\r\n                          {new Date(scheduledWash.date).toLocaleDateString()}\r\n                          {/* -{' '}\r\n                        {new Date(scheduledWash.date).toLocaleTimeString()} */}\r\n                        </span>\r\n                      </td>\r\n                      <td className='relative block w-full p-3 text-center text-gray-700 border border-b lg:w-auto lg:table-cell lg:static'>\r\n                        <span className='absolute top-0 left-0 px-2 py-1 text-xs font-bold uppercase bg-blue-200 lg:hidden'>\r\n                          Day{' '}\r\n                        </span>\r\n                        <span\r\n                          className={`rounded py-1 px-3 text-xs font-semibold text-gray-500`}>\r\n                          {days.find(d => d.number === scheduledWash.day).name}\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                }\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}