{"version":3,"sources":["components/Spinner.js","redux/actions/user.js","pages/users/UsersCrud.js"],"names":["Spinner","class","startUsersReload","dispatch","type","START_USERS_RELOAD","finishedUsersReload","FINISHED_USERS_RELOAD","readAllUsers","query","readItemsAsync","url","process","successType","READ_USERS","errorType","USER_ERROR","startReload","finishedReload","headers","localStorage","getItem","readUsers","queryString","encodeURIComponent","JSON","stringify","page","limit","readOneUser","id","readOneItemAsync","READ_ONE_USER","createUser","formData","createItemAsync","CREATE_USER","title","updateUser","updateItemAsync","UPDATE_USER","_id","deleteUser","deleteItemAsync","DELETE_USER","clearUser","CLEAR_USER","UserCrud","history","match","useDispatch","userReducer","useSelector","state","rolesReducer","useState","errorValidation","setErrorValidation","firstName","lastName","email","password","passwordConfirmation","roles","setFormData","onChange","e","preventDefault","target","name","value","useEffect","params","then","res","data","console","log","catch","err","readRoles","onUserSubmit","a","length","push","alert","toLowerCase","loading","className","parentClassName","style","backgroundColor","placeholder","map","onClick","_objI","borderColor","viewBox"],"mappings":"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","file":"static/js/14.2de789aa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Spinner = () => {\r\n  return <div class='loader'></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import {\r\n  READ_USERS,\r\n  READ_ONE_USER,\r\n  CREATE_USER,\r\n  UPDATE_USER,\r\n  DELETE_USER,\r\n  USER_ERROR,\r\n  CLEAR_USER,\r\n  START_USERS_RELOAD,\r\n  FINISHED_USERS_RELOAD,\r\n} from '../types/user';\r\n\r\nimport { readItemsAsync } from './equCurd/readItems';\r\nimport { readOneItemAsync } from './equCurd/readOneItem';\r\nimport { createItemAsync } from './equCurd/createItem';\r\nimport { updateItemAsync } from './equCurd/updateItem';\r\nimport { deleteItemAsync } from './equCurd/deleteItem';\r\n\r\nexport const startUsersReload = () => dispatch => {\r\n  dispatch({ type: START_USERS_RELOAD });\r\n};\r\n\r\nexport const finishedUsersReload = () => dispatch => {\r\n  dispatch({ type: FINISHED_USERS_RELOAD });\r\n};\r\n\r\nexport const readAllUsers = query =>\r\n  readItemsAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + `/api/users/all`,\r\n    successType: READ_USERS,\r\n    errorType: USER_ERROR,\r\n    startReload: startUsersReload,\r\n    finishedReload: finishedUsersReload,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const readUsers = queryString =>\r\n  readItemsAsync({\r\n    url:\r\n      process.env.REACT_APP_BACKEND_URL +\r\n      `/api/users?query=${encodeURIComponent(\r\n        JSON.stringify(queryString.query)\r\n      )}&page=${queryString.page}&limit=${queryString.limit}`,\r\n    successType: READ_USERS,\r\n    errorType: USER_ERROR,\r\n    startReload: startUsersReload,\r\n    finishedReload: finishedUsersReload,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const readOneUser = id =>\r\n  readOneItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + `/api/users/`,\r\n    successType: READ_ONE_USER,\r\n    errorType: USER_ERROR,\r\n    startReload: startUsersReload,\r\n    finishedReload: finishedUsersReload,\r\n    id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const createUser = formData =>\r\n  createItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/users',\r\n    successType: CREATE_USER,\r\n    errorType: USER_ERROR,\r\n    startReload: startUsersReload,\r\n    finishedReload: finishedUsersReload,\r\n    title: 'User',\r\n    formData,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const updateUser = formData =>\r\n  updateItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/users/',\r\n    successType: UPDATE_USER,\r\n    errorType: USER_ERROR,\r\n    startReload: startUsersReload,\r\n    finishedReload: finishedUsersReload,\r\n    title: 'User',\r\n    formData,\r\n    id: formData._id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const deleteUser = id =>\r\n  deleteItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/users',\r\n    successType: DELETE_USER,\r\n    errorType: USER_ERROR,\r\n    startReload: startUsersReload,\r\n    finishedReload: finishedUsersReload,\r\n    title: 'User',\r\n    id: id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const clearUser = () => dispatch => {\r\n  dispatch({ type: CLEAR_USER });\r\n};\r\n","import Layout from '../../components/Layout';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Redirect, Route, useHistory, useLocation } from 'react-router-dom';\r\nimport {\r\n  readUsers,\r\n  readOneUser,\r\n  updateUser,\r\n  createUser,\r\n} from '../../redux/actions/user';\r\nimport { readRoles } from '../../redux/actions/roles';\r\nimport _objO from '../../utils/_objO';\r\nimport _objI from '../../utils/_objI';\r\nimport Spinner from '../../components/Spinner';\r\nexport default function UserCrud({ history, match }) {\r\n  const dispatch = useDispatch();\r\n  const userReducer = useSelector(state => state.userReducer);\r\n  const rolesReducer = useSelector(state => state.rolesReducer);\r\n  const [errorValidation, setErrorValidation] = useState({});\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirmation: '',\r\n    roles: [],\r\n  });\r\n  const onChange = e => {\r\n    e.preventDefault();\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (match.params.id) {\r\n      dispatch(readOneUser(match.params.id))\r\n        .then(res => {\r\n          setFormData({ ...formData, ...res.data.data });\r\n          console.log({ res: res.data });\r\n        })\r\n        .catch(err => {});\r\n    }\r\n  }, [match.params.id]);\r\n  useEffect(() => {\r\n    dispatch(readRoles());\r\n  }, []);\r\n  useEffect(() => {\r\n    setErrorValidation({});\r\n  }, []);\r\n\r\n  console.log({ userReducer });\r\n  const onUserSubmit = async e => {\r\n    e.preventDefault();\r\n    if (!match.params.id) {\r\n      dispatch(\r\n        createUser({\r\n          firstName: formData.firstName,\r\n          lastName: formData.lastName,\r\n          email: formData.email.toLowerCase(),\r\n          password: formData.password,\r\n          passwordConfirmation: formData.passwordConfirmation,\r\n          roles: formData.roles,\r\n        })\r\n      ).then(res => {\r\n        history.push(`/admin/users`);\r\n      });\r\n    } else if (match.params.id) {\r\n      formData.password.length > 0\r\n        ? dispatch(\r\n            updateUser({\r\n              _id: formData._id,\r\n              firstName: formData.firstName,\r\n              lastName: formData.lastName,\r\n              password: formData.password,\r\n              passwordConfirmation: formData.passwordConfirmation,\r\n              email: formData.email,\r\n              roles: formData.roles,\r\n            })\r\n          ).then(res => history.push(`/admin/users`))\r\n        : dispatch(\r\n            updateUser({\r\n              _id: formData._id,\r\n              firstName: formData.firstName,\r\n              lastName: formData.lastName,\r\n              email: formData.email,\r\n              roles: formData.roles,\r\n            })\r\n          ).then(res => history.push(`/admin/users`));\r\n    } else {\r\n      alert('error');\r\n    }\r\n  };\r\n  if (userReducer.loading || rolesReducer.loading) {\r\n    return (\r\n      <Layout>\r\n        <div className='flex items-center justify-center h-screen'>\r\n          <Spinner />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  } else {\r\n    return (\r\n      <Layout parentClassName={' '}>\r\n        <div\r\n          style={{ backgroundColor: '#F8F8F8' }}\r\n          className='w-full h-screen p-10 transition-all '>\r\n          <div className='flex flex-wrap items-center justify-between w-full transition-all select-none'>\r\n            <div className='flex-grow my-10 text-4xl font-normal text-left text-gray-500 transition-all '>\r\n              Users\r\n              <div className='flex items-center w-full mt-4 text-sm text-left text-gray-500 transition-all'>\r\n                <div className='font-medium transition-all duration-100 transform cursor-pointer hover:text-gray-600 hover:scale-110'>\r\n                  Dashboard\r\n                </div>\r\n                <div className='px-3 font-medium'>{`->`}</div>\r\n                <div className='font-medium transition-all duration-100 transform cursor-pointer hover:text-gray-600 hover:scale-110'>\r\n                  Users\r\n                </div>\r\n                <div className='px-3 font-medium'>{`->`}</div>\r\n                <div className='font-medium transition-all duration-100 transform cursor-pointer hover:text-gray-600 hover:scale-110'>\r\n                  New User\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*  */}\r\n          <div className='py-16 bg-white border rounded shadow-md hover:shadow-lg px-14 '>\r\n            <div className='my-5'>\r\n              <input\r\n                placeholder={'First Name'}\r\n                value={formData.firstName}\r\n                type='text'\r\n                name='firstName'\r\n                onChange={e => {\r\n                  onChange(e);\r\n                }}\r\n                className='w-full p-4 font-normal text-gray-600 border rounded-md shadow outline-none focus:outline-none'\r\n              />\r\n              <small className='text-red-600'>\r\n                {/* {errorValidation && errorValidation.userName} */}\r\n              </small>\r\n            </div>\r\n            <div className='my-5'>\r\n              <input\r\n                placeholder={'Last Name'}\r\n                value={formData.lastName}\r\n                type='text'\r\n                name='lastName'\r\n                onChange={e => {\r\n                  onChange(e);\r\n                }}\r\n                className='w-full p-4 font-normal text-gray-600 border rounded-md shadow outline-none focus:outline-none'\r\n              />\r\n              <small className='text-red-600'>\r\n                {/* {errorValidation && errorValidation.userName} */}\r\n              </small>\r\n            </div>\r\n            <div className='my-5'>\r\n              <input\r\n                name='email'\r\n                value={formData.email}\r\n                type='email'\r\n                placeholder={'Email'}\r\n                onChange={e => {\r\n                  onChange(e);\r\n                }}\r\n                className='w-full p-4 font-normal text-gray-600 border rounded-md shadow outline-none focus:outline-none'\r\n              />\r\n              <small className='text-red-600'>\r\n                {errorValidation && errorValidation.email}\r\n              </small>\r\n            </div>\r\n            <div className='my-5'>\r\n              <input\r\n                type='password'\r\n                name='password'\r\n                value={formData.password}\r\n                placeholder='Password'\r\n                onChange={e => {\r\n                  onChange(e);\r\n                }}\r\n                className='w-full p-4 font-normal text-gray-600 border rounded-md shadow outline-none focus:outline-none'\r\n              />\r\n              <small className='text-red-600'>\r\n                {errorValidation && errorValidation.password}\r\n              </small>\r\n            </div>\r\n            <div className='my-5'>\r\n              <input\r\n                type='password'\r\n                name='passwordConfirmation'\r\n                value={formData.passwordConfirmation}\r\n                placeholder='Confirm Password'\r\n                onChange={e => {\r\n                  onChange(e);\r\n                }}\r\n                className='w-full p-4 font-normal text-gray-600 border rounded-md shadow outline-none focus:outline-none'\r\n              />\r\n              <small className='text-red-600'>\r\n                {errorValidation && errorValidation.passwordConfirmation}\r\n              </small>\r\n            </div>\r\n            <div className='my-5'>\r\n              <select\r\n                value={formData.roles[0]}\r\n                name='roles'\r\n                placeholder='Confirm Password'\r\n                onChange={e => {\r\n                  setFormData({ ...formData, roles: [e.target.value] });\r\n                }}\r\n                className='w-full p-4 font-normal text-gray-600 border rounded-md shadow outline-none focus:outline-none'>\r\n                <option>Select a roles </option>\r\n                {rolesReducer.roles.map(roles => (\r\n                  <option key={roles._id} value={roles._id}>\r\n                    {roles.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className='flex items-center justify-center w-full'>\r\n              <div\r\n                // disabled={_objI(errorValidation)}\r\n                onClick={e => onUserSubmit(e)}\r\n                style={{\r\n                  backgroundColor: _objI(errorValidation) ? '#666' : '#212121',\r\n                  borderColor: '#212121',\r\n                }}\r\n                className={` ${userReducer.loading ? `animate-pulse` : ``} \r\n               \r\n                  w-full text-white py-3 px-4 text-center font-medium rounded-lg mt-16 cursor-pointer hover:bg-black `}>\r\n                {userReducer.loading ? (\r\n                  <svg\r\n                    className='absolute w-5 h-5 mr-3 border-r-2 border-white rounded-full animate-spin left-3'\r\n                    viewBox='0 0 24 24'></svg>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                Save\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}