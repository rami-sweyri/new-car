{"version":3,"sources":["components/Spinner.js","redux/actions/services.js","redux/actions/user.js","redux/actions/cars.js","redux/actions/plans.js","redux/actions/orders.js","pages/orders/Index.js"],"names":["Spinner","class","startServicesReload","dispatch","type","START_SERVICES_RELOAD","finishedServicesReload","FINISHED_SERVICES_RELOAD","readServices","readItemsAsync","url","process","successType","READ_SERVICES","errorType","SERVICE_ERROR","startReload","finishedReload","headers","localStorage","getItem","readOneService","id","readOneItemAsync","READ_ONE_SERVICE","createsService","formData","createItemAsync","CREATE_SERVICE","title","updateService","updateItemAsync","UPDATE_SERVICE","_id","deleteService","deleteItemAsync","DELETE_SERVICE","clearService","CLEAR_SERVICE","startUsersReload","START_USERS_RELOAD","finishedUsersReload","FINISHED_USERS_RELOAD","readAllUsers","query","READ_USERS","USER_ERROR","readUsers","queryString","encodeURIComponent","JSON","stringify","page","limit","readOneUser","READ_ONE_USER","createUser","CREATE_USER","updateUser","UPDATE_USER","deleteUser","DELETE_USER","clearUser","CLEAR_USER","startCarsReload","START_CARS_RELOAD","finishedCarsReload","FINISHED_CARS_RELOAD","readCars","READ_CARS","CAR_ERROR","startPlansReload","START_PLANS_RELOAD","finishedPlansReload","FINISHED_PLANS_RELOAD","readPlans","READ_PLANS","PLAN_ERROR","readOnePlan","READ_ONE_PLAN","createsPlan","CREATE_PLAN","updatePlan","UPDATE_PLAN","deletePlan","DELETE_PLAN","clearPlan","CLEAR_PLAN","startOrdersReload","START_ORDERS_RELOAD","finishedOrdersReload","FINISHED_ORDERS_RELOAD","Services","history","days","name","number","useState","searchValue","model","setModel","modelCar","setModelCar","useDispatch","ordersReducer","useSelector","state","servicesReducer","carsReducer","userReducer","plansReducer","console","log","useEffect","READ_ORDERS","ORDER_ERROR","loading","Layout","className","_objI","style","zIndex","onClick","Object","entries","map","key","value","day","find","d","plans","p","plan","services","service","s","count","userServices","backgroundColor","orders","order","index","status","price","cars","car","carId","users","user","createdBy","email"],"mappings":"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","file":"static/js/6.aaf2bc96.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Spinner = () => {\r\n  return <div class='loader'></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import {\r\n  READ_SERVICES,\r\n  READ_ONE_SERVICE,\r\n  CREATE_SERVICE,\r\n  UPDATE_SERVICE,\r\n  DELETE_SERVICE,\r\n  SERVICE_ERROR,\r\n  CLEAR_SERVICE,\r\n  START_SERVICES_RELOAD,\r\n  FINISHED_SERVICES_RELOAD,\r\n} from '../types/services';\r\n\r\nimport { readItemsAsync } from './equCurd/readItems';\r\nimport { readOneItemAsync } from './equCurd/readOneItem';\r\nimport { createItemAsync } from './equCurd/createItem';\r\nimport { updateItemAsync } from './equCurd/updateItem';\r\nimport { deleteItemAsync } from './equCurd/deleteItem';\r\n\r\nexport const startServicesReload = () => dispatch => {\r\n  dispatch({ type: START_SERVICES_RELOAD });\r\n};\r\n\r\nexport const finishedServicesReload = () => dispatch => {\r\n  dispatch({ type: FINISHED_SERVICES_RELOAD });\r\n};\r\n\r\nexport const readServices = () =>\r\n  readItemsAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/services/all',\r\n    successType: READ_SERVICES,\r\n    errorType: SERVICE_ERROR,\r\n    startReload: startServicesReload,\r\n    finishedReload: finishedServicesReload,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const readOneService = id =>\r\n  readOneItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + `/api/services/`,\r\n    successType: READ_ONE_SERVICE,\r\n    errorType: SERVICE_ERROR,\r\n    startReload: startServicesReload,\r\n    finishedReload: finishedServicesReload,\r\n    id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const createsService = formData =>\r\n  createItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/services/',\r\n    successType: CREATE_SERVICE,\r\n    errorType: SERVICE_ERROR,\r\n    startReload: startServicesReload,\r\n    finishedReload: finishedServicesReload,\r\n    title: 'Services',\r\n    formData,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const updateService = formData =>\r\n  updateItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/services',\r\n    successType: UPDATE_SERVICE,\r\n    errorType: SERVICE_ERROR,\r\n    startReload: startServicesReload,\r\n    finishedReload: finishedServicesReload,\r\n    title: 'Services',\r\n    formData,\r\n    id: formData._id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const deleteService = id =>\r\n  deleteItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/services/',\r\n    successType: DELETE_SERVICE,\r\n    errorType: SERVICE_ERROR,\r\n    startReload: startServicesReload,\r\n    finishedReload: finishedServicesReload,\r\n    title: 'Services',\r\n    id: id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const clearService = () => dispatch => {\r\n  dispatch({ type: CLEAR_SERVICE });\r\n};\r\n","import {\r\n  READ_USERS,\r\n  READ_ONE_USER,\r\n  CREATE_USER,\r\n  UPDATE_USER,\r\n  DELETE_USER,\r\n  USER_ERROR,\r\n  CLEAR_USER,\r\n  START_USERS_RELOAD,\r\n  FINISHED_USERS_RELOAD,\r\n} from '../types/user';\r\n\r\nimport { readItemsAsync } from './equCurd/readItems';\r\nimport { readOneItemAsync } from './equCurd/readOneItem';\r\nimport { createItemAsync } from './equCurd/createItem';\r\nimport { updateItemAsync } from './equCurd/updateItem';\r\nimport { deleteItemAsync } from './equCurd/deleteItem';\r\n\r\nexport const startUsersReload = () => dispatch => {\r\n  dispatch({ type: START_USERS_RELOAD });\r\n};\r\n\r\nexport const finishedUsersReload = () => dispatch => {\r\n  dispatch({ type: FINISHED_USERS_RELOAD });\r\n};\r\n\r\nexport const readAllUsers = query =>\r\n  readItemsAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + `/api/users/all`,\r\n    successType: READ_USERS,\r\n    errorType: USER_ERROR,\r\n    startReload: startUsersReload,\r\n    finishedReload: finishedUsersReload,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const readUsers = queryString =>\r\n  readItemsAsync({\r\n    url:\r\n      process.env.REACT_APP_BACKEND_URL +\r\n      `/api/users?query=${encodeURIComponent(\r\n        JSON.stringify(queryString.query)\r\n      )}&page=${queryString.page}&limit=${queryString.limit}`,\r\n    successType: READ_USERS,\r\n    errorType: USER_ERROR,\r\n    startReload: startUsersReload,\r\n    finishedReload: finishedUsersReload,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const readOneUser = id =>\r\n  readOneItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + `/api/users/`,\r\n    successType: READ_ONE_USER,\r\n    errorType: USER_ERROR,\r\n    startReload: startUsersReload,\r\n    finishedReload: finishedUsersReload,\r\n    id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const createUser = formData =>\r\n  createItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/users',\r\n    successType: CREATE_USER,\r\n    errorType: USER_ERROR,\r\n    startReload: startUsersReload,\r\n    finishedReload: finishedUsersReload,\r\n    title: 'User',\r\n    formData,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const updateUser = formData =>\r\n  updateItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/users/',\r\n    successType: UPDATE_USER,\r\n    errorType: USER_ERROR,\r\n    startReload: startUsersReload,\r\n    finishedReload: finishedUsersReload,\r\n    title: 'User',\r\n    formData,\r\n    id: formData._id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const deleteUser = id =>\r\n  deleteItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/users',\r\n    successType: DELETE_USER,\r\n    errorType: USER_ERROR,\r\n    startReload: startUsersReload,\r\n    finishedReload: finishedUsersReload,\r\n    title: 'User',\r\n    id: id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const clearUser = () => dispatch => {\r\n  dispatch({ type: CLEAR_USER });\r\n};\r\n","import {\r\n  READ_CARS,\r\n  READ_ONE_CAR,\r\n  CREATE_CAR,\r\n  UPDATE_CAR,\r\n  DELETE_CAR,\r\n  SEARCH_CAR_FILTER,\r\n  CAR_ERROR,\r\n  CLEAR_CAR,\r\n  START_CARS_RELOAD,\r\n  FINISHED_CARS_RELOAD,\r\n} from '../types/cars';\r\n\r\nimport { readItemsAsync } from './equCurd/readItems';\r\nimport { createItemAsync } from './equCurd/createItem';\r\nimport { updateItemAsync } from './equCurd/updateItem';\r\nimport { deleteItemAsync } from './equCurd/deleteItem';\r\nimport { readOneItemAsync } from './equCurd/readOneItem';\r\n\r\nexport const startCarsReload = () => dispatch => {\r\n  dispatch({ type: START_CARS_RELOAD });\r\n};\r\n\r\nexport const finishedCarsReload = () => dispatch => {\r\n  dispatch({ type: FINISHED_CARS_RELOAD });\r\n};\r\n\r\nexport const readCars = () =>\r\n  readItemsAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/cars/all',\r\n    successType: READ_CARS,\r\n    errorType: CAR_ERROR,\r\n    startReload: startCarsReload,\r\n    finishedReload: finishedCarsReload,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const readOneCar = id =>\r\n  readOneItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/cars/',\r\n    successType: READ_ONE_CAR,\r\n    errorType: CAR_ERROR,\r\n    startReload: startCarsReload,\r\n    finishedReload: finishedCarsReload,\r\n    id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const createCar = formData =>\r\n  createItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/cars/',\r\n\r\n    successType: CREATE_CAR,\r\n    errorType: CAR_ERROR,\r\n    startReload: startCarsReload,\r\n    finishedReload: finishedCarsReload,\r\n    formData,\r\n    title: 'Car',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const updateCar = formData =>\r\n  updateItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/cars/',\r\n    successType: UPDATE_CAR,\r\n    errorType: CAR_ERROR,\r\n    startReload: startCarsReload,\r\n    finishedReload: finishedCarsReload,\r\n    formData,\r\n    id: formData._id,\r\n    title: 'Car',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const deleteCar = id =>\r\n  deleteItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/cars/',\r\n    successType: DELETE_CAR,\r\n    errorType: CAR_ERROR,\r\n    startReload: startCarsReload,\r\n    finishedReload: finishedCarsReload,\r\n    id,\r\n    title: 'Car',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const searchCarFilter = text => dispatch => {\r\n  dispatch({\r\n    type: SEARCH_CAR_FILTER,\r\n    payload: text,\r\n  });\r\n};\r\n\r\nexport const clearCar = () => dispatch => {\r\n  dispatch({ type: CLEAR_CAR });\r\n};\r\n","import {\r\n  READ_PLANS,\r\n  READ_ONE_PLAN,\r\n  CREATE_PLAN,\r\n  UPDATE_PLAN,\r\n  DELETE_PLAN,\r\n  PLAN_ERROR,\r\n  CLEAR_PLAN,\r\n  START_PLANS_RELOAD,\r\n  FINISHED_PLANS_RELOAD,\r\n} from '../types/plans';\r\n\r\nimport { readItemsAsync } from './equCurd/readItems';\r\nimport { readOneItemAsync } from './equCurd/readOneItem';\r\nimport { createItemAsync } from './equCurd/createItem';\r\nimport { updateItemAsync } from './equCurd/updateItem';\r\nimport { deleteItemAsync } from './equCurd/deleteItem';\r\n\r\nexport const startPlansReload = () => dispatch => {\r\n  dispatch({ type: START_PLANS_RELOAD });\r\n};\r\n\r\nexport const finishedPlansReload = () => dispatch => {\r\n  dispatch({ type: FINISHED_PLANS_RELOAD });\r\n};\r\n\r\nexport const readPlans = () =>\r\n  readItemsAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/plans/all',\r\n    successType: READ_PLANS,\r\n    errorType: PLAN_ERROR,\r\n    startReload: startPlansReload,\r\n    finishedReload: finishedPlansReload,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const readOnePlan = id =>\r\n  readOneItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + `/api/Plans/`,\r\n    successType: READ_ONE_PLAN,\r\n    errorType: PLAN_ERROR,\r\n    startReload: startPlansReload,\r\n    finishedReload: finishedPlansReload,\r\n    id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const createsPlan = formData =>\r\n  createItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/Plans/',\r\n    successType: CREATE_PLAN,\r\n    errorType: PLAN_ERROR,\r\n    startReload: startPlansReload,\r\n    finishedReload: finishedPlansReload,\r\n    title: 'Plans',\r\n    formData,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const updatePlan = formData =>\r\n  updateItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/Plans',\r\n    successType: UPDATE_PLAN,\r\n    errorType: PLAN_ERROR,\r\n    startReload: startPlansReload,\r\n    finishedReload: finishedPlansReload,\r\n    title: 'Plans',\r\n    formData,\r\n    id: formData._id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const deletePlan = id =>\r\n  deleteItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/Plans/',\r\n    successType: DELETE_PLAN,\r\n    errorType: PLAN_ERROR,\r\n    startReload: startPlansReload,\r\n    finishedReload: finishedPlansReload,\r\n    title: 'Plans',\r\n    id: id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const clearPlan = () => dispatch => {\r\n  dispatch({ type: CLEAR_PLAN });\r\n};\r\n","import {\r\n  READ_ORDERS,\r\n  READ_ONE_ORDER,\r\n  CREATE_ORDER,\r\n  UPDATE_ORDER,\r\n  DELETE_ORDER,\r\n  ORDER_ERROR,\r\n  CLEAR_ORDER,\r\n  START_ORDERS_RELOAD,\r\n  FINISHED_ORDERS_RELOAD,\r\n} from '../types/orders';\r\n\r\nimport { readItemsAsync } from './equCurd/readItems';\r\nimport { readOneItemAsync } from './equCurd/readOneItem';\r\nimport { createItemAsync } from './equCurd/createItem';\r\nimport { updateItemAsync } from './equCurd/updateItem';\r\nimport { deleteItemAsync } from './equCurd/deleteItem';\r\n\r\nexport const startOrdersReload = () => dispatch => {\r\n  dispatch({ type: START_ORDERS_RELOAD });\r\n};\r\n\r\nexport const finishedOrdersReload = () => dispatch => {\r\n  dispatch({ type: FINISHED_ORDERS_RELOAD });\r\n};\r\n\r\nexport const readOrders = () =>\r\n  readItemsAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/orders/all',\r\n    successType: READ_ORDERS,\r\n    errorType: ORDER_ERROR,\r\n    startReload: startOrdersReload,\r\n    finishedReload: finishedOrdersReload,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const readOneOrder = id =>\r\n  readOneItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + `/api/orders/`,\r\n    successType: READ_ONE_ORDER,\r\n    errorType: ORDER_ERROR,\r\n    startReload: startOrdersReload,\r\n    finishedReload: finishedOrdersReload,\r\n    id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const createsOrder = formData =>\r\n  createItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/orders/',\r\n    successType: CREATE_ORDER,\r\n    errorType: ORDER_ERROR,\r\n    startReload: startOrdersReload,\r\n    finishedReload: finishedOrdersReload,\r\n    title: 'Orders',\r\n    formData,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const updateOrder = formData =>\r\n  updateItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/orders',\r\n    successType: UPDATE_ORDER,\r\n    errorType: ORDER_ERROR,\r\n    startReload: startOrdersReload,\r\n    finishedReload: finishedOrdersReload,\r\n    title: 'Orders',\r\n    formData,\r\n    id: formData._id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const deleteOrder = id =>\r\n  deleteItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/orders/',\r\n    successType: DELETE_ORDER,\r\n    errorType: ORDER_ERROR,\r\n    startReload: startOrdersReload,\r\n    finishedReload: finishedOrdersReload,\r\n    title: 'Orders',\r\n    id: id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const clearOrder = () => dispatch => {\r\n  dispatch({ type: CLEAR_ORDER });\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AiOutlineCloseCircle, AiOutlineDelete } from 'react-icons/ai';\r\n\r\nimport { readCars } from '../../redux/actions/cars';\r\nimport { readAllUsers } from '../../redux/actions/user';\r\n\r\nimport _objI from '../../utils/_objI';\r\nimport Layout from '../../components/Layout';\r\nimport {\r\n  readOrders,\r\n  deleteOrder,\r\n  clearOrder,\r\n} from '../../redux/actions/orders';\r\nimport { readServices } from '../../redux/actions/services';\r\nimport Spinner from '../../components/Spinner';\r\nimport { readPlans } from './../../redux/actions/plans';\r\nexport default function Services({ history }) {\r\n  let days = [\r\n    { name: 'Sa', number: 6 },\r\n    { name: 'Su', number: 0 },\r\n    { name: 'Mo', number: 1 },\r\n    { name: 'Tu', number: 2 },\r\n    { name: 'We', number: 3 },\r\n    { name: 'Th', number: 4 },\r\n    { name: 'Fr', number: 5 },\r\n  ];\r\n  const [searchValue, setSearchValue] = useState([{}]);\r\n  const [model, setModel] = useState({});\r\n  const [modelCar, setModelCar] = useState({});\r\n  const dispatch = useDispatch();\r\n  const ordersReducer = useSelector(state => state.ordersReducer);\r\n  const servicesReducer = useSelector(state => state.servicesReducer);\r\n  const carsReducer = useSelector(state => state.carsReducer);\r\n  const userReducer = useSelector(state => state.userReducer);\r\n  const plansReducer = useSelector(state => state.plansReducer);\r\n\r\n  console.log({ searchValue });\r\n  useEffect(() => {\r\n    dispatch(readOrders());\r\n    dispatch(readServices());\r\n    dispatch(readAllUsers());\r\n    dispatch(readCars());\r\n    dispatch(readPlans());\r\n  }, []);\r\n  if (\r\n    ordersReducer.loading ||\r\n    servicesReducer.loading ||\r\n    carsReducer.loading ||\r\n    userReducer.loading\r\n  ) {\r\n    return (\r\n      <Layout>\r\n        <div className='flex items-center justify-center h-screen'>\r\n          <Spinner />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  } else {\r\n    return (\r\n      <Layout>\r\n        {_objI(model) && (\r\n          <div\r\n            style={{ zIndex: 1001 }}\r\n            className='fixed top-0 bottom-0 left-0 right-0 flex items-center justify-center w-screen h-screen bg-black bg-opacity-60'>\r\n            <div className='relative z-50 w-auto p-6 border rounded shadow max-w-10/12 bg-gray-50'>\r\n              <span\r\n                onClick={() => {\r\n                  setModel({});\r\n                  setModelCar({});\r\n                }}>\r\n                <AiOutlineCloseCircle className='absolute text-2xl text-red-600 cursor-pointer top-3 right-3 hover:text-red-700' />\r\n              </span>\r\n              <span className='flex flex-wrap w-full'>\r\n                {Object.entries(model).map(([key, value]) => {\r\n                  if (\r\n                    key !== 'trash' &&\r\n                    key !== 'createdAt' &&\r\n                    key !== 'updatedAt' &&\r\n                    key !== '_id' &&\r\n                    key !== 'createdBy' &&\r\n                    key !== '__v' &&\r\n                    key !== 'permissions' &&\r\n                    key !== 'roles' &&\r\n                    key !== 'services'\r\n                  ) {\r\n                    return (\r\n                      <div className='flex w-full py-1'>\r\n                        <span className='mr-3 text-sm font-semibold'>\r\n                          {key}:\r\n                        </span>\r\n                        <span>\r\n                          {typeof value === 'object' && value !== null\r\n                            ? value.name\r\n                            : value}\r\n                        </span>\r\n                      </div>\r\n                    );\r\n                  }\r\n                })}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {_objI(modelCar) && (\r\n          <div\r\n            style={{ zIndex: 1001 }}\r\n            className='fixed top-0 bottom-0 left-0 right-0 flex items-center justify-center w-screen h-screen bg-black bg-opacity-60'>\r\n            <div className='relative z-50 w-auto p-6 border rounded shadow max-w-10/12 bg-gray-50'>\r\n              <span\r\n                onClick={() => {\r\n                  setModel({});\r\n                  setModelCar({});\r\n                }}>\r\n                <AiOutlineCloseCircle className='absolute text-2xl text-red-600 cursor-pointer top-3 right-3 hover:text-red-700' />\r\n              </span>\r\n              <div className='flex flex-wrap w-full py-3'>\r\n                <div className='flex w-full py-1'>\r\n                  <span className='mr-3 text-sm font-semibold'>Days:</span>\r\n                  {modelCar.days.map(day =>\r\n                    days.find(d => d.number === day) ? (\r\n                      <span className='mx-1 text-sm'>\r\n                        {days.find(d => d.number === day).name}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )\r\n                  )}\r\n                </div>\r\n\r\n                <div className='flex w-full py-1'>\r\n                  <span className='mr-3 text-sm font-semibold'>Plan:</span>\r\n                  {plansReducer.plans.find(p => p._id === modelCar.plan) ? (\r\n                    <span className='mx-1 text-sm'>\r\n                      {\r\n                        plansReducer.plans.find(p => p._id === modelCar.plan)\r\n                          .name\r\n                      }\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n\r\n                <div className='flex flex-col w-full py-1'>\r\n                  <span className='mr-3 text-sm font-semibold'>\r\n                    Extra Services:\r\n                  </span>\r\n                  {modelCar.services.map(service => (\r\n                    <div className='flex justify-between w-full'>\r\n                      {servicesReducer.services.find(\r\n                        s => s._id === service.service\r\n                      ) ? (\r\n                        <span className='mx-1 text-sm'>\r\n                          {\r\n                            servicesReducer.services.find(\r\n                              s => s._id === service.service\r\n                            ).name\r\n                          }\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                      <span className='mx-1 text-sm'>{service.count}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                <div className='flex flex-col w-full py-1'>\r\n                  <span className='mr-3 text-sm font-semibold'>\r\n                    Services Left:\r\n                  </span>\r\n                  {modelCar.userServices.map(service => (\r\n                    <div className='flex justify-between w-full'>\r\n                      {servicesReducer.services.find(\r\n                        s => s._id === service.service\r\n                      ) ? (\r\n                        <span className='mx-1 text-sm'>\r\n                          {\r\n                            servicesReducer.services.find(\r\n                              s => s._id === service.service\r\n                            ).name\r\n                          }\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                      <span className='mx-1 text-sm'>{service.count}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div\r\n          style={{ backgroundColor: '#F8F8F8' }}\r\n          className='flex flex-col items-center w-full h-screen p-10 pb-20 transition-all '>\r\n          <div className='flex flex-wrap items-center justify-between w-full transition-all select-none'>\r\n            <div className='flex-grow my-10 text-4xl font-normal text-left text-gray-500 transition-all '>\r\n              Orders\r\n              <div className='flex items-center w-full mt-4 text-sm text-left text-gray-500 transition-all'>\r\n                <div className='font-medium transition-all duration-100 transform cursor-pointer hover:text-gray-600 hover:scale-110'>\r\n                  Dashboard\r\n                </div>\r\n                <div className='px-3 font-medium'>{`->`}</div>\r\n                <div className='font-medium transition-all duration-100 transform cursor-pointer hover:text-gray-600 hover:scale-110'>\r\n                  Orders\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <div\r\n              onClick={() => history.push(\"/admin/orders/new\")}\r\n              style={{ backgroundColor: \"#212121\" }}\r\n              className=\"px-4 py-3 my-10 transition-all rounded-md shadow-md cursor-pointer hover:shadow-lg\"\r\n            >\r\n              <div className=\"text-sm text-center text-white transition-all\">\r\n                Add new order\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n\r\n          <table className='w-full border-collapse shadow-lg table-auto hover:shadow-lg '>\r\n            <thead>\r\n              <tr>\r\n                <th className='hidden p-3 font-bold text-gray-600 uppercase bg-gray-200 border border-gray-300 lg:table-cell'>\r\n                  #\r\n                </th>\r\n\r\n                <th className='hidden p-3 font-bold text-gray-600 uppercase bg-gray-200 border border-gray-300 lg:table-cell'>\r\n                  Status\r\n                </th>\r\n                <th className='hidden p-3 font-bold text-gray-600 uppercase bg-gray-200 border border-gray-300 lg:table-cell'>\r\n                  Type\r\n                </th>\r\n                <th className='hidden p-3 font-bold text-gray-600 uppercase bg-gray-200 border border-gray-300 lg:table-cell'>\r\n                  Total paid\r\n                </th>\r\n                <th className='hidden p-3 font-bold text-gray-600 uppercase bg-gray-200 border border-gray-300 lg:table-cell'>\r\n                  Car\r\n                </th>\r\n                <th className='hidden p-3 font-bold text-gray-600 uppercase bg-gray-200 border border-gray-300 lg:table-cell'>\r\n                  User\r\n                </th>\r\n\r\n                {/* <th className='hidden p-3 font-bold text-gray-600 uppercase bg-gray-200 border border-gray-300 lg:table-cell'>\r\n                  Actions\r\n                </th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {ordersReducer.orders.map((order, index) => (\r\n                <tr className='flex flex-row flex-wrap mb-10 bg-white lg:hover:bg-gray-100 lg:table-row lg:flex-row lg:flex-no-wrap lg:mb-0'>\r\n                  <td className='relative block w-full p-3 text-center text-gray-800 border border-b lg:w-auto lg:table-cell lg:static'>\r\n                    <span className='absolute top-0 left-0 px-2 py-1 text-xs font-bold uppercase bg-blue-200 lg:hidden'>\r\n                      #\r\n                    </span>\r\n                    {index + 1}\r\n                  </td>\r\n\r\n                  <td className='relative block w-full p-3 text-center text-gray-800 border border-b lg:w-auto lg:table-cell lg:static'>\r\n                    <span className='absolute top-0 left-0 px-2 py-1 text-xs font-bold uppercase bg-blue-200 lg:hidden'>\r\n                      Status\r\n                    </span>\r\n                    {order.status}\r\n                  </td>\r\n                  <td className='relative block w-full p-3 text-center text-gray-800 border border-b lg:w-auto lg:table-cell lg:static'>\r\n                    <span className='absolute top-0 left-0 px-2 py-1 text-xs font-bold uppercase bg-blue-200 lg:hidden'>\r\n                      Type\r\n                    </span>\r\n                    <span\r\n                      className={`rounded ${\r\n                        order.type === 'plan'\r\n                          ? `text-red-400`\r\n                          : `text-purple-400`\r\n                      } py-1 px-3 text-xs font-bold`}>\r\n                      {order.type}\r\n                    </span>\r\n                  </td>\r\n\r\n                  <td className='relative block w-full p-3 text-center text-gray-800 border border-b lg:w-auto lg:table-cell lg:static'>\r\n                    <span className='absolute top-0 left-0 px-2 py-1 text-xs font-bold uppercase bg-blue-200 lg:hidden'>\r\n                      Total price\r\n                    </span>\r\n                    <span\r\n                      className={`rounded py-1 px-3 text-xs font-semibold text-gray-500`}>\r\n                      {order.price}\r\n                    </span>\r\n                  </td>\r\n                  <td className='relative block w-full p-3 text-center text-gray-800 border border-b lg:w-auto lg:table-cell lg:static'>\r\n                    <span className='absolute top-0 left-0 px-2 py-1 text-xs font-bold uppercase bg-blue-200 lg:hidden'>\r\n                      Cars\r\n                    </span>\r\n                    {order.cars.map(car => (\r\n                      <p\r\n                        className='px-3 py-2 text-xs font-bold text-gray-500 rounded cursor-pointer'\r\n                        onClick={() =>\r\n                          setModelCar({ ...car, plan: order.plan })\r\n                        }>\r\n                        {carsReducer.cars.find(car => order.car === car.carId)\r\n                          ? carsReducer.cars.find(\r\n                              car => order.car === car.carId\r\n                            ).model\r\n                          : ''}{' '}\r\n                      </p>\r\n                    ))}\r\n                  </td>\r\n                  <td className='relative block w-full p-3 text-center text-gray-800 border border-b lg:w-auto lg:table-cell lg:static'>\r\n                    <span className='absolute top-0 left-0 px-2 py-1 text-xs font-bold uppercase bg-blue-200 lg:hidden'>\r\n                      User\r\n                    </span>\r\n                    {userReducer.users.find(\r\n                      user => order.createdBy === user._id\r\n                    ) ? (\r\n                      <p\r\n                        className='px-3 py-1 text-xs font-bold text-gray-500 rounded cursor-pointer'\r\n                        onClick={() =>\r\n                          setModel(\r\n                            userReducer.users.find(\r\n                              user => order.createdBy === user._id\r\n                            )\r\n                          )\r\n                        }>\r\n                        {\r\n                          userReducer.users.find(\r\n                            user => order.createdBy === user._id\r\n                          ).email\r\n                        }\r\n                      </p>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  {/* \r\n                  <td className='relative block w-full p-3 text-center text-gray-800 border border-b lg:w-auto lg:table-cell lg:static'>\r\n                    <span className='absolute top-0 left-0 px-2 py-1 text-xs font-bold uppercase bg-blue-200 lg:hidden'>\r\n                      Actions\r\n                    </span>\r\n                    <div className='flex items-center justify-evenly'>\r\n            \r\n                      <div\r\n                        onClick={() => {\r\n                          dispatch(clearOrder());\r\n                          dispatch(deleteOrder(order._id));\r\n                        }}\r\n                        className='text-red-500 underline cursor-pointer hover:text-red-500'>\r\n                        <AiOutlineDelete size='1.8rem' />\r\n                      </div>\r\n                    </div>\r\n                  </td> */}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}