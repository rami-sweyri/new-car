{"version":3,"sources":["components/Spinner.js","redux/actions/services.js","redux/actions/plans.js","pages/plans/PlansCrud.js"],"names":["Spinner","class","startServicesReload","dispatch","type","START_SERVICES_RELOAD","finishedServicesReload","FINISHED_SERVICES_RELOAD","readServices","readItemsAsync","url","process","successType","READ_SERVICES","errorType","SERVICE_ERROR","startReload","finishedReload","headers","localStorage","getItem","readOneService","id","readOneItemAsync","READ_ONE_SERVICE","createsService","formData","createItemAsync","CREATE_SERVICE","title","updateService","updateItemAsync","UPDATE_SERVICE","_id","deleteService","deleteItemAsync","DELETE_SERVICE","clearService","CLEAR_SERVICE","startPlansReload","START_PLANS_RELOAD","finishedPlansReload","FINISHED_PLANS_RELOAD","readPlans","READ_PLANS","PLAN_ERROR","readOnePlan","READ_ONE_PLAN","createsPlan","CREATE_PLAN","updatePlan","UPDATE_PLAN","deletePlan","DELETE_PLAN","clearPlan","CLEAR_PLAN","UserCrud","history","match","useDispatch","plansReducer","useSelector","state","servicesReducer","useState","errorValidation","name","label","price","note","period","services","setFormData","count","service","serviceData","setServiceData","onChange","e","preventDefault","target","value","useEffect","params","then","res","data","console","log","catch","err","onUserSubmit","a","push","loading","className","parentClassName","style","backgroundColor","placeholder","map","onClick","find","serv","filter","_objI","borderColor","viewBox"],"mappings":"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","file":"static/js/9.31f9c666.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Spinner = () => {\r\n  return <div class='loader'></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import {\r\n  READ_SERVICES,\r\n  READ_ONE_SERVICE,\r\n  CREATE_SERVICE,\r\n  UPDATE_SERVICE,\r\n  DELETE_SERVICE,\r\n  SERVICE_ERROR,\r\n  CLEAR_SERVICE,\r\n  START_SERVICES_RELOAD,\r\n  FINISHED_SERVICES_RELOAD,\r\n} from '../types/services';\r\n\r\nimport { readItemsAsync } from './equCurd/readItems';\r\nimport { readOneItemAsync } from './equCurd/readOneItem';\r\nimport { createItemAsync } from './equCurd/createItem';\r\nimport { updateItemAsync } from './equCurd/updateItem';\r\nimport { deleteItemAsync } from './equCurd/deleteItem';\r\n\r\nexport const startServicesReload = () => dispatch => {\r\n  dispatch({ type: START_SERVICES_RELOAD });\r\n};\r\n\r\nexport const finishedServicesReload = () => dispatch => {\r\n  dispatch({ type: FINISHED_SERVICES_RELOAD });\r\n};\r\n\r\nexport const readServices = () =>\r\n  readItemsAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/services/all',\r\n    successType: READ_SERVICES,\r\n    errorType: SERVICE_ERROR,\r\n    startReload: startServicesReload,\r\n    finishedReload: finishedServicesReload,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const readOneService = id =>\r\n  readOneItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + `/api/services/`,\r\n    successType: READ_ONE_SERVICE,\r\n    errorType: SERVICE_ERROR,\r\n    startReload: startServicesReload,\r\n    finishedReload: finishedServicesReload,\r\n    id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const createsService = formData =>\r\n  createItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/services/',\r\n    successType: CREATE_SERVICE,\r\n    errorType: SERVICE_ERROR,\r\n    startReload: startServicesReload,\r\n    finishedReload: finishedServicesReload,\r\n    title: 'Services',\r\n    formData,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const updateService = formData =>\r\n  updateItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/services',\r\n    successType: UPDATE_SERVICE,\r\n    errorType: SERVICE_ERROR,\r\n    startReload: startServicesReload,\r\n    finishedReload: finishedServicesReload,\r\n    title: 'Services',\r\n    formData,\r\n    id: formData._id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const deleteService = id =>\r\n  deleteItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/services/',\r\n    successType: DELETE_SERVICE,\r\n    errorType: SERVICE_ERROR,\r\n    startReload: startServicesReload,\r\n    finishedReload: finishedServicesReload,\r\n    title: 'Services',\r\n    id: id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const clearService = () => dispatch => {\r\n  dispatch({ type: CLEAR_SERVICE });\r\n};\r\n","import {\r\n  READ_PLANS,\r\n  READ_ONE_PLAN,\r\n  CREATE_PLAN,\r\n  UPDATE_PLAN,\r\n  DELETE_PLAN,\r\n  PLAN_ERROR,\r\n  CLEAR_PLAN,\r\n  START_PLANS_RELOAD,\r\n  FINISHED_PLANS_RELOAD,\r\n} from '../types/plans';\r\n\r\nimport { readItemsAsync } from './equCurd/readItems';\r\nimport { readOneItemAsync } from './equCurd/readOneItem';\r\nimport { createItemAsync } from './equCurd/createItem';\r\nimport { updateItemAsync } from './equCurd/updateItem';\r\nimport { deleteItemAsync } from './equCurd/deleteItem';\r\n\r\nexport const startPlansReload = () => dispatch => {\r\n  dispatch({ type: START_PLANS_RELOAD });\r\n};\r\n\r\nexport const finishedPlansReload = () => dispatch => {\r\n  dispatch({ type: FINISHED_PLANS_RELOAD });\r\n};\r\n\r\nexport const readPlans = () =>\r\n  readItemsAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/plans/all',\r\n    successType: READ_PLANS,\r\n    errorType: PLAN_ERROR,\r\n    startReload: startPlansReload,\r\n    finishedReload: finishedPlansReload,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const readOnePlan = id =>\r\n  readOneItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + `/api/Plans/`,\r\n    successType: READ_ONE_PLAN,\r\n    errorType: PLAN_ERROR,\r\n    startReload: startPlansReload,\r\n    finishedReload: finishedPlansReload,\r\n    id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const createsPlan = formData =>\r\n  createItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/Plans/',\r\n    successType: CREATE_PLAN,\r\n    errorType: PLAN_ERROR,\r\n    startReload: startPlansReload,\r\n    finishedReload: finishedPlansReload,\r\n    title: 'Plans',\r\n    formData,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const updatePlan = formData =>\r\n  updateItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/Plans',\r\n    successType: UPDATE_PLAN,\r\n    errorType: PLAN_ERROR,\r\n    startReload: startPlansReload,\r\n    finishedReload: finishedPlansReload,\r\n    title: 'Plans',\r\n    formData,\r\n    id: formData._id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const deletePlan = id =>\r\n  deleteItemAsync({\r\n    url: process.env.REACT_APP_BACKEND_URL + '/api/Plans/',\r\n    successType: DELETE_PLAN,\r\n    errorType: PLAN_ERROR,\r\n    startReload: startPlansReload,\r\n    finishedReload: finishedPlansReload,\r\n    title: 'Plans',\r\n    id: id,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'x-access-token': localStorage.getItem('token'),\r\n    },\r\n  });\r\n\r\nexport const clearPlan = () => dispatch => {\r\n  dispatch({ type: CLEAR_PLAN });\r\n};\r\n","import Layout from '../../components/Layout';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Redirect, Route, useHistory, useLocation } from 'react-router-dom';\r\nimport {\r\n  updatePlan,\r\n  readPlans,\r\n  deletePlan,\r\n  clearPlan,\r\n  readOnePlan,\r\n  createsPlan,\r\n} from '../../redux/actions/plans';\r\n\r\nimport _objO from '../../utils/_objO';\r\nimport _objI from '../../utils/_objI';\r\nimport { readServices } from '../../redux/actions/services';\r\nimport { RiCloseCircleFill } from 'react-icons/ri';\r\nimport Spinner from '../../components/Spinner';\r\nexport default function UserCrud({ history, match }) {\r\n  const dispatch = useDispatch();\r\n  const plansReducer = useSelector(state => state.plansReducer);\r\n  const servicesReducer = useSelector(state => state.servicesReducer);\r\n  const [errorValidation, setErrorValidation] = useState({});\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    label: '',\r\n    price: '',\r\n    note: '',\r\n    period: '',\r\n    services: [],\r\n  });\r\n\r\n  const [serviceData, setServiceData] = useState({\r\n    count: '',\r\n    service: '',\r\n  });\r\n  const onChange = e => {\r\n    e.preventDefault();\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (match.params.id) {\r\n      dispatch(readOnePlan(match.params.id))\r\n        .then(res => {\r\n          setFormData({ ...formData, ...res.data.data });\r\n          console.log({ res: res.data });\r\n        })\r\n        .catch(err => {});\r\n    }\r\n  }, [match.params.id]);\r\n  useEffect(() => {\r\n    dispatch(readPlans());\r\n    dispatch(readServices());\r\n  }, []);\r\n  //   useEffect(() => {\r\n  //     setErrorValidation({});\r\n  //   }, []);\r\n  //   useEffect(() => {\r\n  //     if (!match.params.id || formData.password.length > 0) {\r\n  //       validator(\r\n  //         creteSchema,\r\n  //         {\r\n  //           userName: formData.userName,\r\n  //           email: formData.email,\r\n  //           password: formData.password,\r\n  //           passwordConfirmation: formData.passwordConfirmation,\r\n  //         },\r\n  //         setErrorValidation\r\n  //       );\r\n  //     } else if (match.params.id) {\r\n  //       validator(\r\n  //         editSchema,\r\n  //         {\r\n  //           // userName: formData.userName,\r\n  //           email: formData.email,\r\n  //         },\r\n  //         setErrorValidation\r\n  //       );\r\n  //     }\r\n  //   }, [formData, match.params.id]);\r\n  console.log({ formData });\r\n  const onUserSubmit = async e => {\r\n    e.preventDefault();\r\n    if (!match.params.id) {\r\n      dispatch(\r\n        createsPlan({\r\n          name: formData.name,\r\n          label: formData.label,\r\n          price: formData.price,\r\n          note: formData.note,\r\n          services: formData.services,\r\n          period: formData.period,\r\n        })\r\n      ).then(res => history.push(`/admin/plans`));\r\n    } else if (match.params.id) {\r\n      dispatch(\r\n        updatePlan({\r\n          _id: match.params.id,\r\n          name: formData.name,\r\n          label: formData.label,\r\n          price: formData.price,\r\n          note: formData.note,\r\n          services: formData.services,\r\n          period: formData.period,\r\n        })\r\n      ).then(res => history.push(`/admin/plans`));\r\n    } else {\r\n      console.log('error');\r\n    }\r\n  };\r\n  if (plansReducer.loading) {\r\n    return (\r\n      <Layout>\r\n        <div className='flex items-center justify-center h-screen'>\r\n          <Spinner />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  } else {\r\n    return (\r\n      <Layout parentClassName={' '}>\r\n        <div\r\n          style={{ backgroundColor: '#F8F8F8' }}\r\n          className='w-full h-full p-10 transition-all'>\r\n          <div className='flex flex-wrap items-center justify-between w-full transition-all select-none'>\r\n            <div className='flex-grow my-10 text-4xl font-normal text-left text-gray-500 transition-all '>\r\n              Plans\r\n              <div className='flex items-center w-full mt-4 text-sm text-left text-gray-500 transition-all'>\r\n                <div className='font-medium transition-all duration-100 transform cursor-pointer hover:text-gray-600 hover:scale-110'>\r\n                  Dashboard\r\n                </div>\r\n                <div className='px-3 font-medium'>{`->`}</div>\r\n                <div className='font-medium transition-all duration-100 transform cursor-pointer hover:text-gray-600 hover:scale-110'>\r\n                  Plans\r\n                </div>\r\n                <div className='px-3 font-medium'>{`->`}</div>\r\n                <div className='font-medium transition-all duration-100 transform cursor-pointer hover:text-gray-600 hover:scale-110'>\r\n                  New Plan\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*  */}\r\n          <div className='py-16 bg-white border rounded shadow-md hover:shadow-lg px-14 '>\r\n            <div className='my-5'>\r\n              <input\r\n                placeholder={'Name'}\r\n                value={formData.name}\r\n                type='text'\r\n                name='name'\r\n                onChange={e => {\r\n                  onChange(e);\r\n                }}\r\n                className='w-full p-4 font-normal text-gray-600 border rounded-md shadow outline-none focus:outline-none'\r\n              />\r\n              <small className='text-red-600'></small>\r\n            </div>\r\n            <div className='my-5'>\r\n              <input\r\n                name='label'\r\n                value={formData.label}\r\n                type='email'\r\n                placeholder={'Label'}\r\n                onChange={e => {\r\n                  onChange(e);\r\n                }}\r\n                className='w-full p-4 font-normal text-gray-600 border rounded-md shadow outline-none focus:outline-none'\r\n              />\r\n              <small className='text-red-600'></small>\r\n            </div>\r\n            <div className='my-5'>\r\n              <input\r\n                type='text'\r\n                name='price'\r\n                value={formData.price}\r\n                placeholder='Price'\r\n                onChange={e => {\r\n                  onChange(e);\r\n                }}\r\n                className='w-full p-4 font-normal text-gray-600 border rounded-md shadow outline-none focus:outline-none'\r\n              />\r\n              <small className='text-red-600'></small>\r\n            </div>\r\n            <div className='my-5'>\r\n              <input\r\n                type='text'\r\n                name='period'\r\n                value={formData.period}\r\n                placeholder='Period'\r\n                onChange={e => {\r\n                  onChange(e);\r\n                }}\r\n                className='w-full p-4 font-normal text-gray-600 border rounded-md shadow outline-none focus:outline-none'\r\n              />\r\n              <small className='text-red-600'></small>\r\n            </div>\r\n\r\n            <div className='flex my-5'>\r\n              {/* <select\r\n                name=\"service\"\r\n                value={serviceData.service}\r\n                placeholder=\"Service\"\r\n                onChange={(e) => {\r\n                  setServiceData({ ...serviceData, service: e.target.value });\r\n                }}\r\n                className=\"w-full p-4 font-normal text-gray-600 border rounded-md shadow outline-none focus:outline-none\"\r\n              >\r\n                {servicesReducer.services.map((service) => (\r\n                  <option value={service._id}>{service.name}</option>\r\n                ))}\r\n              </select> */}\r\n              <input\r\n                type='text'\r\n                name='note'\r\n                value={formData.note}\r\n                placeholder='Note'\r\n                onChange={e => {\r\n                  onChange(e);\r\n                }}\r\n                className='w-full p-4 font-normal text-gray-600 border rounded-md shadow outline-none focus:outline-none'\r\n              />\r\n              <small className='text-red-600'></small>\r\n            </div>\r\n\r\n            <div className='flex flex-wrap justify-between my-5'>\r\n              <div className='flex flex-grow my-1 '>\r\n                <select\r\n                  name='service'\r\n                  value={serviceData.service}\r\n                  placeholder='Service'\r\n                  onChange={e => {\r\n                    setServiceData({ ...serviceData, service: e.target.value });\r\n                  }}\r\n                  className='w-full p-4 mr-1 font-normal text-gray-600 border rounded-md shadow outline-none sm:w-6/12 focus:outline-none'>\r\n                  <option value=''>Select Service</option>\r\n                  {servicesReducer.services.map(service => (\r\n                    <option value={service._id}>{service.name}</option>\r\n                  ))}\r\n                </select>\r\n                <input\r\n                  type='number'\r\n                  name='count'\r\n                  value={serviceData.count}\r\n                  placeholder='Count'\r\n                  onChange={e => {\r\n                    setServiceData({ ...serviceData, count: e.target.value });\r\n                  }}\r\n                  className='w-full p-4 ml-1 font-normal text-center text-gray-600 border rounded-md shadow outline-none sm:w-6/12 md:mr-2 focus:outline-none sm:text-left'\r\n                />\r\n              </div>\r\n              <div\r\n                onClick={e =>\r\n                  setFormData({\r\n                    ...formData,\r\n                    services: [...formData.services, serviceData],\r\n                  })\r\n                }\r\n                className={`w-full flex items-center justify-center md:w-5/12 text-white py-3 px-4 text-center font-medium rounded-md cursor-pointer bg-blue-600 hover:bg-blue-700 my-1`}>\r\n                Add\r\n              </div>\r\n            </div>\r\n            <div className='flex flex-wrap w-full'>\r\n              {formData.services.map(service => (\r\n                <div className='relative px-3 py-3 pr-6 my-2 mr-2 text-xs text-white bg-blue-500 rounded cursor-pointer hover:bg-blue-600'>\r\n                  <span className='mx-2'>\r\n                    name:\r\n                    {servicesReducer.services.find(\r\n                      serv => serv._id === service.service\r\n                    )\r\n                      ? servicesReducer.services.find(\r\n                          serv => serv._id === service.service\r\n                        ).name\r\n                      : ''}{' '}\r\n                  </span>\r\n                  <span className='mx-2'>count: {service.count}</span>\r\n                  <div\r\n                    className='absolute text-xl top-1 right-1'\r\n                    onClick={() =>\r\n                      setFormData({\r\n                        ...formData,\r\n                        services: formData.services.filter(\r\n                          serv => serv.service !== service.service\r\n                        ),\r\n                      })\r\n                    }>\r\n                    <RiCloseCircleFill className='text-white' />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className='flex items-center justify-center w-full'>\r\n              <div\r\n                // disabled={_objI(errorValidation)}\r\n                onClick={e => onUserSubmit(e)}\r\n                style={{\r\n                  backgroundColor: _objI(errorValidation) ? '#666' : '#212121',\r\n                  borderColor: '#212121',\r\n                }}\r\n                className={` ${plansReducer.loading ? `animate-pulse` : ``} \r\n               \r\n                  w-full text-white py-3 px-4 text-center font-medium rounded-lg mt-16 cursor-pointer hover:bg-black `}>\r\n                {plansReducer.loading ? (\r\n                  <svg\r\n                    className='absolute w-5 h-5 mr-3 border-r-2 border-white rounded-full animate-spin left-3'\r\n                    viewBox='0 0 24 24'></svg>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                Save\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}